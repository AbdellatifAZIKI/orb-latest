{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFunc","formatFunc","Field","caption","customfunc","visible","collapsible","collapsed","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","axe","rowSettings","columnSettings","dataSettings","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","aggregation","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","dataHeadersLocation","grandTotal","width","height","theme","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","map","rows","columns","data","dataFieldsCount","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","splice","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","parent","value","isRoot","isLeaf","getRowIndexes","result","j",6,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",7,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",8,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",9,"states","set","key","state",10,"isBootstrap","currentTheme","themes","red","blue","green","orange","flower","gray","white","black","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","header","title","body",11,"uiheaders","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","uiInfos","currparent","infos","prevpar","grandpar","prevgrandpar","_multidatafields","leafIndex","datafieldindex","_datafieldscount","dataHeader","getUiInfo","HeaderType","SUB_TOTAL","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.header",12,"CellBase","template","expanded","cssclass","hspan","vspan","isvisible","getState","setState","newState","EMPTY","DATA_HEADER","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","subSpan","tspan","addone","subheaders","subheader","isRowsAxe","expand","collapse","dataCell","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",13,"uirows","uicols","OrbReactComps","buildUi","setArrayLength","arr","createVisibleFunc","rowvisible","colvisible","rowsInfos","rowsInfoslength","columnsInfos","columnsInfoslength","columnsAllHeaders","columnsAllHeaderslength","layout","rowHeaders","columnHeaders","pivotTable","cells","ci","uiinfo","prelength","ui","ruiinfo","Array","uri","rinfo","cinfosIndex","cinfo","renderElement","pivotComponent","Dialog","create","setProps","oldAxeType","newAxeType","changeTheme","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","drilldown","index","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",14,"rowsAxe","addDataHeaders","lastInfosArray","infosMaxIndex","valIndex","subTotalHeader","newHeader","lastrow","grandtotalHeader",15,"ns","identifier","parts","split","prop","Object","prototype","apply","isString","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify",16,"getClassname","compProps","cell","classname","isHidden","isEmpty","leftmostheader","leftmostdatavalue","leftmost","topmost","rightmost","FilterManager","reactComp","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","document","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","getBoundingClientRect","outerContainerSize","valuesTableSize","outerContainerWidth","right","left","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","filterContainerElement","children","onOperatorChanged","newOperator","regexpActiveChanged","className","removeEventListener","target","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","createElement","appendChild","react","reactUtils","extraCol","comps","pivotId","themeChangeCallbacks","createClass","getInitialState","DragManager","registerThemeChanged","updateClasses","moveButton","expandRow","collapseRow","compCallback","unregisterThemeChanged","thisnode","PivotButton","PivotRow","DropTarget","Toolbar","fieldButtons","pivotTableComp","dataButtons","columnButtons","rowButtons","rowButtonsCell","colSpan","rowSpan","buttons","rowButtonsCount","tblStyle","PivotCell","lastCellIndex","cell0","rowstyle","isrightmost","isleftmostHeader","isleftmost","isleftmostDataValue","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","onDoubleClick","dragManager","doElementsOverlap","elem1Rect","elem2Rect","signalDragOver","onDragOver","_dragElement","signalDragEnd","onDragEnd","getDropTarget","_dropTargets","component","isover","getDropIndicator","_dropIndicators","indicator","_pivotComp","_dragNode","_initialized","pivotComp","dragElement","elem","prevDragElement","dropTarget","dropIndicator","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","componentWillUnmount","isFirst","isLast","dtid","pbid","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","childNodes","filterButtonPos","getOffset","filterPanelFactory","FilterPanel","filterPanel","componentDidUpdate","onMouseMove","onMouseUp","componentDidMount","onMouseDown","thispos","mouseoffset","wasdragging","size","getSize","newpos","divstyle","sortIndicator","filterClass","padding","verticalAlign","filterManager","unmountComponentAtNode","removeChild","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","addCheckboxRow","text","defaultChecked","Dropdown","buttonClass","currentFilter","selectedValue","onValueChanged","placeholder","float","openOrClose","valueNode","refs","valueElement","valuesListNode","valuesList","selectValue","listNode","isli","textContent","dangerouslySetInnerHTML","__html","ref","tableClasses","headerRow","h","statics","dialogFactory","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","onThemeChanged","themeColors","color","../orb.axe","../orb.filtering","../orb.themes","../orb.ui.header","../orb.utils","./orb.react.utils",17,"list","defStop","ret","rect"],"mappings":"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","file":"orb.min.js","sourcesContent":["/**\n * orb v1.0.7, Pivot grid javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.7\n * @link http://nnajm.github.io/orb/\n * @license MIT\n */\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n\n        }, {\n            \"./orb.pgrid\": 7,\n            \"./orb.query\": 8,\n            \"./orb.ui.pgridwidget\": 13,\n            \"./orb.utils\": 15\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 15\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var configs = [];\n                var sorts = [];\n                var subtotals = [];\n                var functions = [];\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    configs.push(nnconfig);\n                    sorts.push(nnconfig.sort || {});\n                    subtotals.push(nnconfig.subTotal || {});\n                    functions.push({\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return new Field({\n                    name: getpropertyvalue('name', configs, ''),\n\n                    caption: getpropertyvalue('caption', configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', sorts, null),\n                        customfunc: getpropertyvalue('customfunc', sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', subtotals, false)\n                    },\n\n                    aggregateFunc: getpropertyvalue('aggregateFunc', functions, null),\n                    formatFunc: getpropertyvalue('formatFunc', functions, null)\n                }, false);\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                }\n\n                return mergefieldconfigs(fieldconfig, axeconfig, defaultfieldconfig, rootconfig);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFunc(options.aggregateFunc || 'sum');\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.theme = themeManager;\n\n                themeManager.current(config.theme);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var field = getfield(self.allFields, fieldname);\n\n                    if (field) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            field = createfield(self, newaxetype, null, field);\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 6,\n            \"./orb.themes\": 10,\n            \"./orb.utils\": 15\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false\n                    } else {\n                        return true;\n                    }\n                }\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                }\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 15\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                    }\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                }\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                }\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            return self.calcAggregation(rowdim.getRowIndexes().slice(0), coldim.getRowIndexes().slice(0), [datafieldName], aggregateFunc)[datafieldName] || null;\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                return self.dataMatrix[rowdim.id][coldim.id][datafieldName] || null;\n                            }\n                        }\n\n                        return null;\n                    }\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                }\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc()\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 6,\n            \"./orb.query\": 8,\n            \"./orb.utils\": 15\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                }\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 15\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        10: [function(_dereq_, module, exports) {\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#268BD2',\n                    green: '#3A9D23',\n                    orange: 'darkorange',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    white: '#FFFFFF',\n                    black: '#000000'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : '')\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-striped table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n\n                this.axe = columnsAxe;\n\n\n                this.uiInfos = null;\n\n                this.leafsHeaders = null;\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'columns' ? self.axe.pgrid.config.dataFieldsCount : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'columns' && _datafieldscount > 1;\n\n                    self.uiInfos = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                            self.uiInfos.push([]);\n                            getUiInfo(depth, self.uiInfos);\n                        }\n\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            // add grandtotal header\n                            (self.uiInfos[0] = self.uiInfos[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount));\n                        }\n\n                        if (self.uiInfos.length === 0) {\n                            self.uiInfos.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount)]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.uiInfos.length > 0) {\n                        // last headers row\n                        var infos = self.uiInfos[self.uiInfos.length - 1];\n                        var header = infos[0];\n\n                        var currparent,\n                            prevpar = header.parent;\n\n                        for (var i = 0; i < infos.length; i++) {\n                            header = infos[i];\n                            currparent = header.parent;\n                            // if current header parent is different than previous header parent,\n                            // add previous parent\n                            if (currparent != prevpar) {\n                                pushsubtotal(prevpar);\n                                if (currparent != null) {\n                                    // walk up parent hierarchy and add grand parents if different \n                                    // than current header grand parents\n                                    var grandpar = currparent.parent;\n                                    var prevgrandpar = prevpar ? prevpar.parent : null;\n                                    while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                        pushsubtotal(prevgrandpar);\n                                        grandpar = grandpar ? grandpar.parent : null;\n                                        prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                    }\n                                }\n                                // update previous parent variable\n                                prevpar = currparent;\n                            }\n                            // push current header\n                            leafsHeaders.push(infos[i]);\n\n                            // if it's the last header, add all of its parents up to the top\n                            if (i === infos.length - 1) {\n                                while (prevpar != null) {\n                                    pushsubtotal(prevpar);\n                                    prevpar = prevpar.parent;\n                                }\n                            }\n                        }\n                        // grandtotal is visible for columns and if there is more than one dimension in this axe\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                            // push also grand total header\n                            leafsHeaders.push(self.uiInfos[0][self.uiInfos[0].length - 1]);\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (_multidatafields) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.uiInfos.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, uiInfos) {\n\n                    var infos = uiInfos[uiInfos.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        uiInfos[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, _datafieldscount, subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 12\n        }],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'));\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = 'cell';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = 'Total ' + dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan() {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            for (var i = 0; i < self.subheaders.length; i++) {\n                                var subheader = self.subheaders[i];\n                                // if its not an array\n                                if (!subheader.dim.isLeaf) {\n                                    subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                    tspan += subSpan;\n                                    if (i === 0 && (subSpan === 0 || (isRowsAxe && subheader.type === HeaderType.SUB_TOTAL && !subheader.expanded))) {\n                                        addone = true;\n                                    }\n                                } else {\n                                    tspan += datafieldscount;\n                                }\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 9\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                var pivotComponent;\n                var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.cells = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null,\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.setProps({});\n                }\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    self.pgrid.moveField(field, oldAxeType, newAxeType, position);\n                    buildUi();\n                };\n\n                this.changeTheme = function(newTheme) {\n                    pivotComponent.changeTheme(newTheme);\n                }\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build rows and columns\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsInfos = self.rows.uiInfos;\n                    var rowsInfoslength = rowsInfos.length;\n\n                    var columnsInfos = self.columns.uiInfos;\n                    var columnsInfoslength = columnsInfos.length;\n\n                    var columnsAllHeaders = self.columns.leafsHeaders;\n                    var columnsAllHeaderslength = columnsAllHeaders.length;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsInfoslength\n                        },\n                        columnHeaders: {\n                            width: columnsAllHeaderslength,\n                            height: (self.pgrid.columns.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var cells = [];\n                    setArrayLength(cells, columnsInfoslength + rowsInfoslength);\n\n                    function setArrayLength(arr, length) {\n                        if (arr.length !== length) {\n                            arr.length = length;\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    var arr;\n\n                    for (var ci = 0; ci < columnsInfoslength; ci++) {\n\n                        var uiinfo = columnsInfos[ci];\n                        var prelength = 0;\n                        arr = (cells[ci] = cells[ci] || []);\n                        if (columnsInfoslength > 1 && ci === 0) {\n                            prelength = 1;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            arr[0] = new uiheaders.emptyCell(self.layout.rowHeaders.width, self.layout.columnHeaders.height - 1);\n                        } else if (ci === columnsInfoslength - 1) {\n                            prelength = self.layout.rowHeaders.width;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            if (self.pgrid.rows.fields.length > 0) {\n                                for (var findex = 0; findex < self.pgrid.config.rowFields.length; findex++) {\n                                    arr[findex] = new uiheaders.buttonCell(self.pgrid.config.rowFields[findex]);\n                                }\n                            } else {\n                                arr[0] = new uiheaders.emptyCell(self.layout.rowHeaders.width, 1);\n                            }\n                        }\n\n                        for (var ui = 0; ui < uiinfo.length; ui++) {\n                            arr[prelength + ui] = uiinfo[ui];\n                        }\n                    }\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n\n                    for (var ri = 0; ri < rowsInfoslength; ri++) {\n                        var ruiinfo = rowsInfos[ri];\n\n                        arr = (cells[columnsInfoslength + ri] = cells[columnsInfoslength + ri] || new Array(ruiinfo.length + columnsAllHeaderslength));\n                        setArrayLength(arr, ruiinfo.length + columnsAllHeaderslength);\n\n                        for (var uri = 0; uri < ruiinfo.length; uri++) {\n                            arr[uri] = ruiinfo[uri];\n                        }\n\n                        var rinfo = ruiinfo[ruiinfo.length - 1];\n                        for (var cinfosIndex = 0; cinfosIndex < columnsAllHeaderslength; cinfosIndex++) {\n                            var cinfo = columnsAllHeaders[cinfosIndex];\n                            var isvisible = createVisibleFunc(rinfo.visible, cinfo.visible);\n                            arr[ruiinfo.length + cinfosIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rinfo, cinfo);\n                        }\n                    }\n                    self.cells = cells;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 7,\n            \"./orb.ui.cols\": 11,\n            \"./orb.ui.header\": 12,\n            \"./orb.ui.rows\": 14,\n            \"./react/orb.react.compiled\": 16\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n\n                this.axe = rowsAxe;\n\n\n                this.uiInfos = [];\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'rows' ? (self.axe.pgrid.config.dataFieldsCount || 1) : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'rows' && _datafieldscount > 1;\n\n                    var uiInfos = [\n                        []\n                    ];\n                    if (self.axe != null) {\n                        // Fill Rows layout infos\n                        getUiInfo(uiInfos, self.axe.root);\n\n                        if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            var lastrow = uiInfos[uiInfos.length - 1];\n                            var grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount);\n                            if (lastrow.length === 0) {\n                                lastrow.push(grandtotalHeader);\n                            } else {\n                                uiInfos.push([grandtotalHeader]);\n                            }\n\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(uiInfos, grandtotalHeader);\n                        }\n\n                        if (uiInfos[0].length === 0) {\n                            uiInfos[0].push(new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount));\n                        }\n\n                    }\n                    self.uiInfos = uiInfos;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (_multidatafields) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < _datafieldscount - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, _datafieldscount, subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 12\n        }],\n        15: [function(_dereq_, module, exports) {\n\n            module.exports = {\n\n                ns: function(identifier, parent) {\n                    var parts = identifier.split('.');\n                    var i = 0;\n                    parent = parent || window;\n                    while (i < parts.length) {\n                        parent[parts[i]] = parent[parts[i]] || {};\n                        parent = parent[parts[i]];\n                        i++;\n                    }\n                    return parent;\n                },\n\n                ownProperties: function(obj) {\n                    var arr = [];\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            arr.push(prop);\n                        }\n                    }\n                    return arr;\n                },\n\n                isArray: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Array]';\n                },\n\n                isNumber: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Number]';\n                },\n\n                isDate: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Date]';\n                },\n\n                isString: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object String]';\n                },\n\n                isRegExp: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                },\n\n                escapeRegex: function(re) {\n                    return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                },\n\n                findInArray: function(array, predicate) {\n                    if (this.isArray(array) && predicate) {\n                        for (var i = 0; i < array.length; i++) {\n                            var item = array[i];\n                            if (predicate(item)) {\n                                return item;\n                            }\n                        }\n                    }\n                    return undefined;\n                },\n\n                jsonStringify: function(obj, censorKeywords) {\n                    function censor(key, value) {\n                        return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                    }\n                    return JSON.stringify(obj, censor, 2);\n                }\n            };\n\n        }, {}],\n        16: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var reactUtils = _dereq_('./orb.react.utils');\n\n            var extraCol = 1;\n            var comps = module.exports;\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function(button, newAxeType, position) {\n                    this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position);\n                    this.setProps({});\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                applyFilter: function(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback) >= 0)) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function() {\n                    var thisnode = this.getDOMNode();\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[0].className = classes.table;\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var PivotButton = comps.PivotButton;\n                    var PivotRow = comps.PivotRow;\n                    var DropTarget = comps.DropTarget;\n                    var Toolbar = comps.Toolbar;\n\n                    var fieldButtons = config.availablefields().map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: null,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    // get 'row buttons' row (also last row containing column headers)\n                    var rowButtons = utils.findInArray(this.pgridwidget.cells, function(row) {\n                        return row[0].template === 'cell-template-fieldbutton';\n                    });\n\n                    // build row buttons\n                    if (rowButtons !== undefined) {\n                        rowButtons = rowButtons.filter(function(buttonCell) {\n                            return buttonCell.template === 'cell-template-fieldbutton';\n                        }).map(function(buttonCell, index) {\n                            return React.createElement(PivotButton, {\n                                key: buttonCell.value.name,\n                                field: buttonCell.value,\n                                axetype: axe.Type.ROWS,\n                                position: index,\n                                pivotTableComp: self\n                            });\n                        });\n                    } else {\n                        rowButtons = [];\n                    }\n\n                    // build the cell that will contains 'row buttons'\n                    var rowButtonsCell = React.createElement(\"td\", {\n                            className: \"empty\",\n                            colSpan: this.pgridwidget.layout.rowHeaders.width + extraCol,\n                            rowSpan: \"1\"\n                        },\n                        React.createElement(DropTarget, {\n                            buttons: rowButtons,\n                            axetype: axe.Type.ROWS\n                        })\n                    );\n\n                    var rows = this.pgridwidget.cells.map(function(row, index) {\n                        if (index == self.pgridwidget.layout.columnHeaders.height - 1) {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                row: row,\n                                topmost: index === 0,\n                                rowButtonsCount: self.pgridwidget.layout.rowHeaders.width,\n                                rowButtonsCell: rowButtonsCell,\n                                pivotTableComp: self\n                            });\n                        } else {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                topmost: index === 0,\n                                row: row,\n                                pivotTableComp: self\n                            });\n                        }\n                    });\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: classes.container,\n                                style: tblStyle\n                            },\n                            React.createElement(\"table\", {\n                                    id: \"{'tbl' + self.id}\",\n                                    className: classes.table,\n                                    style: {\n                                        width: '100%'\n                                    }\n                                },\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"orb-toolbar\",\n                                                colSpan: this.pgridwidget.layout.pivotTable.width + extraCol\n                                            },\n                                            React.createElement(Toolbar, {\n                                                pivotTableComp: self\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap av-flds text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Fields\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"av-flds\",\n                                                colSpan: this.pgridwidget.layout.pivotTable.width,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: fieldButtons,\n                                                axetype: null\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Data\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: this.pgridwidget.layout.pivotTable.width,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: dataButtons,\n                                                axetype: axe.Type.DATA\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                            className: \"empty\",\n                                            colSpan: this.pgridwidget.layout.rowHeaders.width + extraCol,\n                                            rowSpan: \"1\"\n                                        }),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: this.pgridwidget.layout.columnHeaders.width,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: columnButtons,\n                                                axetype: axe.Type.COLUMNS\n                                            })\n                                        )\n                                    ),\n                                    rows\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var cells;\n\n                    var rowstyle = {};\n\n                    if (this.props.rowButtonsCell !== undefined) {\n                        cells = this.props.row.slice(this.props.rowButtonsCount).map(function(cell, index) {\n                            var isrightmost = index === (lastCellIndex - self.props.rowButtonsCount);\n                            var isleftmostHeader = index === 0;\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                rightmost: isrightmost,\n                                leftmostheader: isleftmostHeader,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", null,\n                                this.props.rowButtonsCell,\n                                cells\n                            )\n                        );\n\n                    } else {\n\n                        if (cell0.template == 'cell-template-row-header' && cell0.visible && !cell0.visible()) {\n                            rowstyle.display = 'none';\n                        }\n\n                        cells = this.props.row.map(function(cell, index) {\n                            var isrightmost = index === lastCellIndex;\n                            var isleftmost = index === 0 && (\n                                cell.type === uiheaders.HeaderType.EMPTY ||\n                                (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.dim.parent.isRoot) ||\n                                (cell.type === uiheaders.HeaderType.GRAND_TOTAL) ||\n                                (cell.dim && (cell.dim.isRoot || cell.dim.parent.isRoot))\n                            );\n                            var isleftmostHeader = cell.template === 'cell-template-column-header' && index === 1;\n                            var isleftmostDataValue = cell.template === 'cell-template-datavalue' && cell.visible() && (self.props.row[index - 1].template !== 'cell-template-datavalue' || !self.props.row[index - 1].visible());\n\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                leftmostheader: isleftmostHeader,\n                                leftmostdatavalue: isleftmostDataValue,\n                                rightmost: isrightmost,\n                                leftmost: isleftmost,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", {\n                                    style: rowstyle\n                                },\n                                cells\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var cellClick;\n                    var headerPushed = false;\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible && cell.subtotalHeader.expanded;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", null, cell.value)))\n                                    )));\n                            }\n                            value = cell.value;\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            className: cell.template !== 'cell-template-datavalue' ? 'hdr-val' : ''\n                        }, React.createElement(\"div\", null, value)));\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: getClassname(this.props),\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan() + (this.props.leftmost ? extraCol : 0),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            function getClassname(compProps) {\n                var cell = compProps.cell;\n                var classname = cell.cssclass;\n                var isHidden = !cell.visible();\n                var isEmpty = cell.template === 'cell-template-empty';\n\n                if (isHidden) {\n                    classname += ' cell-hidden';\n                }\n\n                if (compProps.leftmostheader || compProps.leftmostdatavalue || (compProps.leftmost && !isEmpty)) {\n                    classname += ' cell-leftmost';\n                }\n\n                if (compProps.topmost && !isEmpty) {\n                    classname += ' cell-topmost';\n                }\n\n                if (compProps.rightmost && (cell.axetype !== axe.Type.COLUMNS || cell.type === uiheaders.HeaderType.GRAND_TOTAL)) {\n                    classname += ' cell-rightmost';\n                }\n\n                if (cell.template === 'cell-template-column-header' || cell.template === 'cell-template-dataheader') {\n                    classname += ' cntr';\n                }\n\n                return classname;\n            }\n\n\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n                var _dragElement = null;\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function signalDragOver(target) {\n                    if (target.onDragOver) {\n                        target.onDragOver(_dragElement);\n                        return true;\n                    }\n                    return false;\n                }\n\n                function signalDragEnd(target) {\n                    if (target.onDragEnd) {\n                        target.onDragEnd();\n                        return true;\n                    }\n                    return false;\n                }\n\n                function getDropTarget() {\n                    return reactUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return reactUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    dragElement: function(elem) {\n\n                        var prevDragElement = _dragElement;\n                        _dragElement = elem;\n                        if (_dragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                // Drop Target\n                                var dropTarget = getDropTarget();\n                                // Drop Indicator\n                                var dropIndicator = getDropIndicator();\n\n                                if (dropTarget) {\n                                    var position = dropIndicator != null ? dropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, dropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                reactUtils.forEach(_dropTargets, function(target) {\n                                    signalDragEnd(target);\n                                });\n\n                                reactUtils.forEach(_dropIndicators, function(indicator) {\n                                    signalDragEnd(indicator);\n                                });\n\n                            } else {\n                                _dragNode = _dragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_dragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            reactUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap && signalDragOver(target)) {\n                                        foundTarget = target;\n                                        return true;\n                                    } else {\n                                        signalDragEnd(target);\n                                    }\n                                }\n                            }, true);\n\n                            var foundIndicator;\n\n                            if (foundTarget) {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    if (!foundIndicator) {\n                                        var elementOwnIndicator = indicator.component.props.axetype === _dragElement.props.axetype &&\n                                            indicator.component.props.position === _dragElement.props.position;\n\n                                        var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        if (targetIndicator && !elementOwnIndicator) {\n                                            var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                            var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                            if (isOverlap && signalDragOver(indicator)) {\n                                                foundIndicator = indicator;\n                                                return;\n                                            }\n                                        }\n                                    }\n\n                                    signalDragEnd(indicator);\n                                });\n\n                                if (!foundIndicator) {\n                                    var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                        return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                    });\n                                    if (axeIndicators.length > 0) {\n                                        signalDragOver(axeIndicators[axeIndicators.length - 1]);\n                                    }\n                                }\n                            } else {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    signalDragEnd(indicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true,\n                        width: component.getDOMNode().style.width\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false,\n                        width: null\n                    });\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    // initial state, all zero.\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false\n                    });\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button\n                            ];\n                        } else {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button,\n                                React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                })\n                            ];\n                        }\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '')\n                        },\n                        buttons\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.getDOMNode().childNodes[0].rows[0].cells[2].childNodes[0];\n                    var filterButtonPos = reactUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = this.props.pivotTableComp.pgrid.config.theme.getFilterClasses().container;\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        dragManager.dragElement(null);\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        dragManager.dragElement(this);\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentDidMount: function() {\n                    this.props.pivotTableComp.registerThemeChanged(this.updateClasses);\n                },\n                componentWillUnmount: function() {\n                    this.props.pivotTableComp.unregisterThemeChanged(this.updateClasses);\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thispos = reactUtils.getOffset(this.getDOMNode());\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: {\n                            x: thispos.x - e.pageX,\n                            y: thispos.y - e.pageY,\n                        },\n                        startpos: {\n                            x: e.pageX,\n                            y: e.pageY\n                        }\n                    });\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function() {\n                    var wasdragging = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    // if button was not dragged, proceed as a click\n                    if (!wasdragging) {\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n\n                    return true;\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = reactUtils.getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                updateClasses: function() {\n                    this.getDOMNode().className = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton;\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : ''\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortIndicator = self.props.field.sort.order === 'asc' ?\n                        ' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            ' \\u2193' :\n                            '');\n\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton,\n                            onMouseDown: this.onMouseDown,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0\n                                        }\n                                    }, self.props.field.caption),\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0,\n                                            width: 13\n                                        }\n                                    }, sortIndicator),\n                                    React.createElement(\"td\", {\n                                            style: {\n                                                padding: 0,\n                                                verticalAlign: 'top'\n                                            }\n                                        },\n                                        React.createElement(\"div\", {\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                filterManager: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.props.pivotTableComp.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.getDOMNode().rows[1].cells[0].children[0];\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    this.filterManager.init(this.getDOMNode());\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var Dropdown = comps.Dropdown;\n                    var checkboxes = [];\n\n                    this.filterManager = new FilterManager(this, this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().orbButton;\n                    var pivotStyle = window.getComputedStyle(this.props.pivotTableComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    var currentFilter = this.pgridwidget.pgrid.getFieldFilter(this.props.field);\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(Dropdown, {\n                                        values: [\n                                            filtering.Operators.MATCH.name,\n                                            filtering.Operators.NOTMATCH.name,\n                                            filtering.Operators.EQ.name,\n                                            filtering.Operators.NEQ.name,\n                                            filtering.Operators.GT.name,\n                                            filtering.Operators.GTE.name,\n                                            filtering.Operators.LT.name,\n                                            filtering.Operators.LTE.name\n                                        ],\n                                        selectedValue: currentFilter && currentFilter.operator ? currentFilter.operator.name : filtering.Operators.MATCH.name,\n                                        onValueChanged: this.filterManager.onOperatorChanged\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                    className: \"srchbox-col\"\n                                }, React.createElement(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"search\"\n                                }))\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var resizeManager;\n\n                this.init = function(filterContainerElement) {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                this.onOperatorChanged = function(newOperator) {\n                    if (operator.name !== newOperator) {\n                        operator = filtering.Operators.get(newOperator);\n                        self.toggleRegexpButtonVisibility();\n                        self.searchChanged('operatorChanged');\n                    }\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className = elems.enableRegexButton.className.replace(/\\s+srchtyp\\-col\\-hidden/, '');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className += ' srchtyp-col-hidden';\n                    }\n                }\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        elems.enableRegexButton.className += ' srchtyp-col-active';\n                    }\n                }\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                }\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        if (checkedCount == 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            var excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n            }\n\n            module.exports.Dropdown = react.createClass({\n                openOrClose: function(e) {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    var valuesListNode = this.refs.valuesList.getDOMNode();\n                    if (e.target === valueNode && valuesListNode.style.display === 'none') {\n                        valuesListNode.style.display = 'block';\n                    } else {\n                        valuesListNode.style.display = 'none';\n                    }\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidMount: function() {\n                    document.addEventListener('click', this.openOrClose);\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('click', this.openOrClose);\n                },\n                selectValue: function(e) {\n                    var listNode = this.refs.valuesList.getDOMNode();\n                    var target = e.target;\n                    var isli = false;\n                    while (!isli && target != null) {\n                        if (target.parentNode == listNode) {\n                            isli = true;\n                            break;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    if (isli) {\n                        var value = target.textContent;\n                        var valueElement = this.refs.valueElement.getDOMNode();\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (this.props.onValueChanged) {\n                                this.props.onValueChanged(value);\n                            }\n                        }\n                    }\n                },\n                render: function() {\n                    function createSelectValueFunc(value) {\n                        return function() {\n                            this.selectValue(value);\n                        };\n                    }\n\n                    var values = [];\n                    for (var i = 0; i < this.props.values.length; i++) {\n                        values.push(React.createElement(\"li\", {\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.values[i]\n                            }\n                        }))\n                    }\n\n                    return React.createElement(\"div\", {\n                            className: \"orb-select\"\n                        },\n                        React.createElement(\"div\", {\n                            ref: \"valueElement\",\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.selectedValue\n                            }\n                        }),\n                        React.createElement(\"ul\", {\n                                ref: \"valuesList\",\n                                style: {\n                                    display: 'none'\n                                },\n                                onClick: this.selectValue\n                            },\n                            values\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClasses = this.props.theme.getGridClasses();\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", {\n                                key: 'h' + h\n                            }, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", {\n                            key: 'h'\n                        }, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            for (var j = 0; j < data[i].length; j++) {\n                                row.push(React.createElement(\"td\", {\n                                    key: i + '' + j\n                                }, data[i][j]));\n                            }\n                            rows.push(React.createElement(\"tr\", {\n                                key: i\n                            }, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClasses.table\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        }\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = this.props.theme.getDialogClasses(visible).overlay;\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var classes = this.props.theme.getDialogClasses();\n\n                        return React.createElement(\"div\", {\n                                className: classes.dialog,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\"div\", {\n                                    className: classes.content\n                                },\n                                React.createElement(\"div\", {\n                                    className: classes.header\n                                }, React.createElement(\"div\", {\n                                    className: \"button-close\",\n                                    onClick: this.close\n                                }), React.createElement(\"div\", {\n                                    className: classes.title\n                                }, this.props.title)),\n                                React.createElement(\"div\", {\n                                        className: classes.body\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.Toolbar = react.createClass({\n                onThemeChanged: function(newTheme) {\n                    this.props.pivotTableComp.changeTheme(newTheme);\n                },\n                render: function() {\n\n                    var Dropdown = comps.Dropdown;\n\n                    var themeColors = _dereq_('../orb.themes').themes;\n                    var values = [];\n                    for (var color in themeColors) {\n                        values.push('<div style=\"float: left; width: 16px; height: 16px; margin-right: 3px; border: 1px dashed lightgray; background-color: ' + themeColors[color] + '\"></div><div style=\"float: left;\">' + color + '</div>');\n                    }\n                    values.push('<div style=\"float: left; width: 16px; height: 16px; margin-right: 3px; border: 1px dashed lightgray;\"></div><div style=\"float: left;\">bootstrap</div>');\n\n                    var buttons = [\n                        React.createElement(\"div\", {\n                            style: {\n                                width: 101,\n                                float: 'left'\n                            }\n                        }, React.createElement(Dropdown, {\n                            values: values,\n                            selectedValue: 'Theme',\n                            onValueChanged: this.onThemeChanged\n                        })),\n                        React.createElement(\"div\", {\n                            className: \"orb-tlbr-btn orb-tlbr-btn-expandall\"\n                        }),\n                        React.createElement(\"div\", {\n                            className: \"orb-tlbr-btn orb-tlbr-btn-collapseall\"\n                        })\n                    ];\n\n                    return React.createElement(\"div\", null,\n                        buttons\n                    );\n                }\n            });\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.filtering\": 6,\n            \"../orb.themes\": 10,\n            \"../orb.ui.header\": 12,\n            \"../orb.utils\": 15,\n            \"./orb.react.utils\": 17,\n            \"react\": undefined\n        }],\n        17: [function(_dereq_, module, exports) {\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list != null) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            }\n\n            module.exports.getOffset = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left + 0,\n                        y: rect.top + 0\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            module.exports.getSize = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}