{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","sorts","subtotals","filters","functions","arguments","nnconfig","subTotal","filter","aggregateFunc","formatFunc","Field","caption","regexp","operator","value","customfunc","visible","collapsible","collapsed","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","axe","rowSettings","columnSettings","dataSettings","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","FilterConfig","aggregation","filtering","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","dataHeadersLocation","grandTotal","width","height","theme","trim","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","allFields","map","rows","columns","data","dataFieldsCount","getField","getRowField","getColumnField","getDataField","availablefields","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","splice","./orb.aggregation","./orb.axe","./orb.filtering",5,"id","parent","isRoot","isLeaf","getRowIndexes","result","j",6,"ALL","NONE","BLANK","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",7,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",8,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",9,"states","set","key","state",10,"uiheaders","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","uiInfos","currparent","infos","header","prevpar","grandpar","prevgrandpar","_multidatafields","leafIndex","datafieldindex","_datafieldscount","dataHeader","getUiInfo","HeaderType","SUB_TOTAL","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.header",11,"CellBase","template","expanded","cssclass","hspan","vspan","isvisible","getState","setState","newState","EMPTY","DATA_HEADER","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","subSpan","tspan","addone","subheaders","subheader","isRowsAxe","expand","collapse","dataCell","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",12,"uirows","uicols","OrbReactComps","buildUi","setArrayLength","arr","createVisibleFunc","rowvisible","colvisible","rowsInfos","rowsInfoslength","columnsInfos","columnsInfoslength","columnsAllHeaders","columnsAllHeaderslength","rowHeadersWidth","columnHeadersWidth","rowHeadersHeight","columnHeadersHeight","totalWidth","totalHeight","cells","ci","uiinfo","prelength","ui","ruiinfo","Array","uri","rinfo","cinfosIndex","cinfo","renderElement","pivotComponent","forceUpdate","oldAxeType","newAxeType","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","dialog","Dialog","create","drilldown","title","index","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",13,"rowsAxe","addDataHeaders","lastInfosArray","infosMaxIndex","valIndex","subTotalHeader","newHeader","lastrow","grandtotalHeader",14,"ns","identifier","parts","split","prop","Object","prototype","apply","isString","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify",15,"FilterManager","reactComp","filterContainerElement","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","dropdownManager","select","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","document","body","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","getBoundingClientRect","outerContainerSize","valuesTableSize","outerContainerWidth","right","left","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","DropdownManager","dropdowElement","valueChangedCallback","valueElement","children","listElement","target","textContent","notify","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","newOperator","regexpActiveChanged","className","removeEventListener","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","createElement","appendChild","react","reactUtils","extraCol","comps","pivotId","createClass","getInitialState","DragManager","setProps","moveButton","expandRow","cell","collapseRow","PivotButton","PivotRow","DropTarget","fieldButtons","pivotTableComp","dataButtons","columnButtons","rowButtons","rowButtonsCell","colSpan","rowSpan","buttons","topmost","rowButtonsCount","useBootstrap","containerClass","orbtableClass","tblStyle","PivotCell","lastCellIndex","cell0","rowstyle","isrightmost","isleftmostHeader","rightmost","leftmostheader","isleftmost","isleftmostDataValue","leftmostdatavalue","leftmost","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","classname","isHidden","onDoubleClick","dragManager","doElementsOverlap","elem1Rect","elem2Rect","signalDragOver","onDragOver","_dragElement","signalDragEnd","onDragEnd","getDropTarget","_dropTargets","component","isover","getDropIndicator","_dropIndicators","indicator","_pivotComp","_dragNode","_initialized","pivotComp","dragElement","elem","prevDragElement","dropTarget","dropIndicator","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","componentWillUnmount","isFirst","isLast","dtid","pbid","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","childNodes","filterButtonPos","getOffset","filterPanelFactory","FilterPanel","filterPanel","onMouseDown","thispos","mouseoffset","componentDidUpdate","onMouseMove","onMouseUp","wasdragging","size","getSize","newpos","divstyle","sortIndicator","filterClass","padding","verticalAlign","container","unmountComponentAtNode","removeChild","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","componentDidMount","addCheckboxRow","text","defaultChecked","buttonClass","bootstrap","placeholder","float","tableClass","headerRow","h","statics","dialogFactory","overlay","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","dialogClass","contentClass","headerClass","titleClass","bodyClass","../orb.axe","../orb.filtering","../orb.ui.header","../orb.utils","./orb.react.utils",16,"list","defStop","ret","rect"],"mappings":"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","file":"orb.min.js","sourcesContent":["/**\n * orb v1.0.7, Pivot grid javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.7\n * @link http://nnajm.github.io/orb/\n * @license MIT\n */\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n\n        }, {\n            \"./orb.pgrid\": 7,\n            \"./orb.query\": 8,\n            \"./orb.ui.pgridwidget\": 12,\n            \"./orb.utils\": 14\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 14\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var configs = [];\n                var sorts = [];\n                var subtotals = [];\n                var filters = [];\n                var functions = [];\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    configs.push(nnconfig);\n                    sorts.push(nnconfig.sort || {});\n                    subtotals.push(nnconfig.subTotal || {});\n                    filters.push(nnconfig.filter || {});\n                    functions.push({\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return new Field({\n                    name: getpropertyvalue('name', configs, ''),\n\n                    caption: getpropertyvalue('caption', configs, ''),\n                    filter: {\n                        type: getpropertyvalue('type', filters, 'operator'),\n                        regexp: getpropertyvalue('regexp', filters, null),\n                        operator: getpropertyvalue('operator', filters, null),\n                        value: getpropertyvalue('value', filters, null)\n                    },\n\n                    sort: {\n                        order: getpropertyvalue('order', sorts, null),\n                        customfunc: getpropertyvalue('customfunc', sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', subtotals, false)\n                    },\n\n                    aggregateFunc: getpropertyvalue('aggregateFunc', functions, null),\n                    formatFunc: getpropertyvalue('formatFunc', functions, null)\n                }, false);\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                }\n\n                return mergefieldconfigs(fieldconfig, axeconfig, defaultfieldconfig, rootconfig);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            function FilterConfig(options) {\n                options = options || {};\n\n                this.type = options.type;\n\n                this.operator = options.operator;\n                this.value = options.value;\n\n                this.values = options.values;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n                this.filter = new FilterConfig(options.filter);\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFunc(options.aggregateFunc || 'sum');\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.theme = (config.theme || 'blue').toString().trim();\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var field = getfield(self.allFields, fieldname);\n\n                    if (field) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            field = createfield(self, newaxetype, null, field);\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 6,\n            \"./orb.utils\": 14\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false\n                    } else {\n                        return true;\n                    }\n                }\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                }\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 14\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                    }\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                }\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                }\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            return self.calcAggregation(rowdim.getRowIndexes().slice(0), coldim.getRowIndexes().slice(0), [datafieldName], aggregateFunc)[datafieldName] || null;\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                return self.dataMatrix[rowdim.id][coldim.id][datafieldName] || null;\n                            }\n                        }\n\n                        return null;\n                    }\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                }\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc()\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 6,\n            \"./orb.query\": 8,\n            \"./orb.utils\": 14\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                }\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 14\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        10: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n\n                this.axe = columnsAxe;\n\n\n                this.uiInfos = null;\n\n                this.leafsHeaders = null;\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'columns' ? self.axe.pgrid.config.dataFieldsCount : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'columns' && _datafieldscount > 1;\n\n                    self.uiInfos = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                            self.uiInfos.push([]);\n                            getUiInfo(depth, self.uiInfos);\n                        }\n\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            // add grandtotal header\n                            (self.uiInfos[0] = self.uiInfos[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount));\n                        }\n\n                        if (self.uiInfos.length === 0) {\n                            self.uiInfos.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount)]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.uiInfos.length > 0) {\n                        // last headers row\n                        var infos = self.uiInfos[self.uiInfos.length - 1];\n                        var header = infos[0];\n\n                        var currparent,\n                            prevpar = header.parent;\n\n                        for (var i = 0; i < infos.length; i++) {\n                            header = infos[i];\n                            currparent = header.parent;\n                            // if current header parent is different than previous header parent,\n                            // add previous parent\n                            if (currparent != prevpar) {\n                                pushsubtotal(prevpar);\n                                if (currparent != null) {\n                                    // walk up parent hierarchy and add grand parents if different \n                                    // than current header grand parents\n                                    var grandpar = currparent.parent;\n                                    var prevgrandpar = prevpar ? prevpar.parent : null;\n                                    while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                        pushsubtotal(prevgrandpar);\n                                        grandpar = grandpar ? grandpar.parent : null;\n                                        prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                    }\n                                }\n                                // update previous parent variable\n                                prevpar = currparent;\n                            }\n                            // push current header\n                            leafsHeaders.push(infos[i]);\n\n                            // if it's the last header, add all of its parents up to the top\n                            if (i === infos.length - 1) {\n                                while (prevpar != null) {\n                                    pushsubtotal(prevpar);\n                                    prevpar = prevpar.parent;\n                                }\n                            }\n                        }\n                        // grandtotal is visible for columns and if there is more than one dimension in this axe\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                            // push also grand total header\n                            leafsHeaders.push(self.uiInfos[0][self.uiInfos[0].length - 1]);\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (_multidatafields) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.uiInfos.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, uiInfos) {\n\n                    var infos = uiInfos[uiInfos.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        uiInfos[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, _datafieldscount, subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 11\n        }],\n        11: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'));\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = 'cell';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = 'Total ' + dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan() {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            for (var i = 0; i < self.subheaders.length; i++) {\n                                var subheader = self.subheaders[i];\n                                // if its not an array\n                                if (!subheader.dim.isLeaf) {\n                                    subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                    tspan += subSpan;\n                                    if (i === 0 && (subSpan === 0 || (isRowsAxe && subheader.type === HeaderType.SUB_TOTAL && !subheader.expanded))) {\n                                        addone = true;\n                                    }\n                                } else {\n                                    tspan += datafieldscount;\n                                }\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 9\n        }],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.rowHeadersWidth = null;\n\n\n                this.columnHeadersWidth = null;\n\n\n                this.rowHeadersHeight = null;\n\n\n                this.columnHeadersHeight = null;\n\n\n                this.totalWidth = null;\n\n\n                this.totalWidth = null;\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.forceUpdate();\n                }\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                    pivotComponent.forceUpdate();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    self.pgrid.moveField(field, oldAxeType, newAxeType, position);\n                    buildUi();\n                };\n\n                this.filters = null;\n\n                this.cells = [];\n\n                var pivotComponent;\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                var dialog = OrbReactComps.Dialog.create();\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build rows and columns\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsInfos = self.rows.uiInfos;\n                    var rowsInfoslength = rowsInfos.length;\n\n                    var columnsInfos = self.columns.uiInfos;\n                    var columnsInfoslength = columnsInfos.length;\n\n                    var columnsAllHeaders = self.columns.leafsHeaders;\n                    var columnsAllHeaderslength = columnsAllHeaders.length;\n\n                    // set control properties\t\t\n                    self.rowHeadersWidth = (self.pgrid.rows.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0);\n                    self.columnHeadersWidth = columnsAllHeaderslength;\n                    self.rowHeadersHeight = rowsInfoslength;\n                    self.columnHeadersHeight = (self.pgrid.columns.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0);\n                    self.totalWidth = self.rowHeadersWidth + self.columnHeadersWidth;\n                    self.totalHeight = self.rowHeadersHeight + self.columnHeadersHeight;\n\n                    var cells = [];\n                    setArrayLength(cells, columnsInfoslength + rowsInfoslength);\n\n                    function setArrayLength(arr, length) {\n                        if (arr.length !== length) {\n                            arr.length = length;\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    var arr;\n\n                    for (var ci = 0; ci < columnsInfoslength; ci++) {\n\n                        var uiinfo = columnsInfos[ci];\n                        var prelength = 0;\n                        arr = (cells[ci] = cells[ci] || []);\n                        if (columnsInfoslength > 1 && ci === 0) {\n                            prelength = 1;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            arr[0] = new uiheaders.emptyCell(self.rowHeadersWidth, self.columnHeadersHeight - 1);\n                        } else if (ci === columnsInfoslength - 1) {\n                            prelength = self.rowHeadersWidth;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            if (self.pgrid.rows.fields.length > 0) {\n                                for (var findex = 0; findex < self.pgrid.config.rowFields.length; findex++) {\n                                    arr[findex] = new uiheaders.buttonCell(self.pgrid.config.rowFields[findex]);\n                                }\n                            } else {\n                                arr[0] = new uiheaders.emptyCell(self.rowHeadersWidth, 1);\n                            }\n                        }\n\n                        for (var ui = 0; ui < uiinfo.length; ui++) {\n                            arr[prelength + ui] = uiinfo[ui];\n                        }\n                    }\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n\n                    for (var ri = 0; ri < rowsInfoslength; ri++) {\n                        var ruiinfo = rowsInfos[ri];\n\n                        arr = (cells[columnsInfoslength + ri] = cells[columnsInfoslength + ri] || new Array(ruiinfo.length + columnsAllHeaderslength));\n                        setArrayLength(arr, ruiinfo.length + columnsAllHeaderslength);\n\n                        for (var uri = 0; uri < ruiinfo.length; uri++) {\n                            arr[uri] = ruiinfo[uri];\n                        }\n\n                        var rinfo = ruiinfo[ruiinfo.length - 1];\n                        for (var cinfosIndex = 0; cinfosIndex < columnsAllHeaderslength; cinfosIndex++) {\n                            var cinfo = columnsAllHeaders[cinfosIndex];\n                            var isvisible = createVisibleFunc(rinfo.visible, cinfo.visible);\n                            arr[ruiinfo.length + cinfosIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rinfo, cinfo);\n                        }\n                    }\n                    self.cells = cells;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 7,\n            \"./orb.ui.cols\": 10,\n            \"./orb.ui.header\": 11,\n            \"./orb.ui.rows\": 13,\n            \"./react/orb.react.compiled\": 15\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n\n                this.axe = rowsAxe;\n\n\n                this.uiInfos = [];\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'rows' ? (self.axe.pgrid.config.dataFieldsCount || 1) : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'rows' && _datafieldscount > 1;\n\n                    var uiInfos = [\n                        []\n                    ];\n                    if (self.axe != null) {\n                        // Fill Rows layout infos\n                        getUiInfo(uiInfos, self.axe.root);\n\n                        if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            var lastrow = uiInfos[uiInfos.length - 1];\n                            var grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount);\n                            if (lastrow.length === 0) {\n                                lastrow.push(grandtotalHeader);\n                            } else {\n                                uiInfos.push([grandtotalHeader]);\n                            }\n\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(uiInfos, grandtotalHeader);\n                        }\n\n                        if (uiInfos[0].length === 0) {\n                            uiInfos[0].push(new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount));\n                        }\n\n                    }\n                    self.uiInfos = uiInfos;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (_multidatafields) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < _datafieldscount - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, _datafieldscount, subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 11\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            module.exports = {\n\n                ns: function(identifier, parent) {\n                    var parts = identifier.split('.');\n                    var i = 0;\n                    parent = parent || window;\n                    while (i < parts.length) {\n                        parent[parts[i]] = parent[parts[i]] || {};\n                        parent = parent[parts[i]];\n                        i++;\n                    }\n                    return parent;\n                },\n\n                ownProperties: function(obj) {\n                    var arr = [];\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            arr.push(prop);\n                        }\n                    }\n                    return arr;\n                },\n\n                isArray: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Array]';\n                },\n\n                isNumber: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Number]';\n                },\n\n                isDate: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Date]';\n                },\n\n                isString: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object String]';\n                },\n\n                isRegExp: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                },\n\n                escapeRegex: function(re) {\n                    return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                },\n\n                findInArray: function(array, predicate) {\n                    if (this.isArray(array) && predicate) {\n                        for (var i = 0; i < array.length; i++) {\n                            var item = array[i];\n                            if (predicate(item)) {\n                                return item;\n                            }\n                        }\n                    }\n                    return undefined;\n                },\n\n                jsonStringify: function(obj, censorKeywords) {\n                    function censor(key, value) {\n                        return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                    }\n                    return JSON.stringify(obj, censor, 2);\n                }\n            };\n\n        }, {}],\n        15: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var reactUtils = _dereq_('./orb.react.utils');\n\n            var extraCol = 1;\n            var comps = module.exports;\n\n            var pivotId = 1;\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps(this.props);\n                },\n                moveButton: function(button, newAxeType, position) {\n                    this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position);\n                    this.setProps(this.props);\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var PivotButton = comps.PivotButton;\n                    var PivotRow = comps.PivotRow;\n                    var DropTarget = comps.DropTarget;\n\n                    var fieldButtons = config.availablefields().map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: null,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self\n                        });\n                    });\n\n                    // get 'row buttons' row (also last row containing column headers)\n                    var rowButtons = utils.findInArray(this.pgridwidget.cells, function(row) {\n                        return row[0].template === 'cell-template-fieldbutton';\n                    });\n\n                    // build row buttons\n                    if (rowButtons !== undefined) {\n                        rowButtons = rowButtons.filter(function(buttonCell) {\n                            return buttonCell.template === 'cell-template-fieldbutton';\n                        }).map(function(buttonCell, index) {\n                            return React.createElement(PivotButton, {\n                                key: buttonCell.value.name,\n                                field: buttonCell.value,\n                                axetype: axe.Type.ROWS,\n                                position: index,\n                                pivotTableComp: self\n                            });\n                        });\n                    } else {\n                        rowButtons = [];\n                    }\n\n                    // build the cell that will contains 'row buttons'\n                    var rowButtonsCell = React.createElement(\"td\", {\n                            className: \"empty\",\n                            colSpan: this.pgridwidget.rowHeadersWidth + extraCol,\n                            rowSpan: \"1\"\n                        },\n                        React.createElement(DropTarget, {\n                            buttons: rowButtons,\n                            axetype: axe.Type.ROWS\n                        })\n                    );\n\n                    var rows = this.pgridwidget.cells.map(function(row, index) {\n                        if (index == self.pgridwidget.columnHeadersHeight - 1) {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                row: row,\n                                topmost: index === 0,\n                                rowButtonsCount: self.pgridwidget.rowHeadersWidth,\n                                rowButtonsCell: rowButtonsCell,\n                                pivotTableComp: self\n                            });\n                        } else {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                topmost: index === 0,\n                                row: row,\n                                pivotTableComp: self\n                            });\n                        }\n                    });\n\n                    var useBootstrap = config.theme === 'bootstrap';\n                    var containerClass = \"orb-container orb-\" + config.theme;\n                    var orbtableClass = \"orb\" + (useBootstrap ? \" table\" : \"\");\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: containerClass,\n                                style: tblStyle\n                            },\n                            React.createElement(\"table\", {\n                                    id: \"{'tbl' + self.id}\",\n                                    className: orbtableClass,\n                                    style: {\n                                        width: '100%'\n                                    }\n                                },\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap av-flds text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Fields\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"av-flds\",\n                                                colSpan: this.pgridwidget.totalWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: fieldButtons,\n                                                axetype: null\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Data\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: this.pgridwidget.totalWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: dataButtons,\n                                                axetype: axe.Type.DATA\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                            className: \"empty\",\n                                            colSpan: this.pgridwidget.rowHeadersWidth + extraCol,\n                                            rowSpan: \"1\"\n                                        }),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: this.pgridwidget.columnHeadersWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                buttons: columnButtons,\n                                                axetype: axe.Type.COLUMNS\n                                            })\n                                        )\n                                    ),\n                                    rows\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var cells;\n\n                    var rowstyle = {};\n\n                    if (this.props.rowButtonsCell !== undefined) {\n                        cells = this.props.row.slice(this.props.rowButtonsCount).map(function(cell, index) {\n                            var isrightmost = index === (lastCellIndex - self.props.rowButtonsCount);\n                            var isleftmostHeader = index === 0;\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                rightmost: isrightmost,\n                                leftmostheader: isleftmostHeader,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", null,\n                                this.props.rowButtonsCell,\n                                cells\n                            )\n                        );\n\n                    } else {\n\n                        if (cell0.template == 'cell-template-row-header' && cell0.visible && !cell0.visible()) {\n                            rowstyle.display = 'none';\n                        }\n\n                        cells = this.props.row.map(function(cell, index) {\n                            var isrightmost = index === lastCellIndex;\n                            var isleftmost = index === 0 && (\n                                cell.type === uiheaders.HeaderType.EMPTY ||\n                                (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.dim.parent.isRoot) ||\n                                (cell.type === uiheaders.HeaderType.GRAND_TOTAL) ||\n                                (cell.dim && (cell.dim.isRoot || cell.dim.parent.isRoot))\n                            );\n                            var isleftmostHeader = cell.template === 'cell-template-column-header' && index === 1;\n                            var isleftmostDataValue = cell.template === 'cell-template-datavalue' && cell.visible() && (self.props.row[index - 1].template !== 'cell-template-datavalue' || !self.props.row[index - 1].visible());\n\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                leftmostheader: isleftmostHeader,\n                                leftmostdatavalue: isleftmostDataValue,\n                                rightmost: isrightmost,\n                                leftmost: isleftmost,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", {\n                                    style: rowstyle\n                                },\n                                cells\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var vArrow = '\\u25bc';\n                    var hArrow = '\\u25b6';\n                    var cellClick;\n                    var headerPushed = false;\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible && cell.subtotalHeader.expanded;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", null, cell.value)))\n                                    )));\n                            }\n                            value = cell.value;\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            className: cell.template !== 'cell-template-datavalue' ? 'hdr-val' : ''\n                        }, React.createElement(\"div\", null, value)));\n                    }\n\n                    var classname = cell.cssclass;\n                    var isHidden = !cell.visible();\n\n                    if (isHidden) {\n                        classname += ' cell-hidden';\n                    }\n\n                    if (this.props.topmost && cell.template !== 'cell-template-empty') {\n                        classname += ' cell-topmost';\n                    }\n\n                    if (this.props.rightmost && (cell.axetype !== axe.Type.COLUMNS || cell.type === uiheaders.HeaderType.GRAND_TOTAL)) {\n                        classname += ' cell-rightmost';\n                    }\n\n                    if ((this.props.leftmost && cell.template !== 'cell-template-empty') || this.props.leftmostheader || this.props.leftmostdatavalue) {\n                        classname += ' cell-leftmost';\n                    }\n\n                    if (cell.template === 'cell-template-column-header' || cell.template === 'cell-template-dataheader') {\n                        classname += ' cntr';\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: classname,\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan() + (this.props.leftmost ? extraCol : 0),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n                var _dragElement = null;\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function signalDragOver(target) {\n                    if (target.onDragOver) {\n                        target.onDragOver(_dragElement);\n                        return true;\n                    }\n                    return false;\n                }\n\n                function signalDragEnd(target) {\n                    if (target.onDragEnd) {\n                        target.onDragEnd();\n                        return true;\n                    }\n                    return false;\n                }\n\n                function getDropTarget() {\n                    return reactUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return reactUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    dragElement: function(elem) {\n\n                        var prevDragElement = _dragElement;\n                        _dragElement = elem;\n                        if (_dragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                // Drop Target\n                                var dropTarget = getDropTarget();\n                                // Drop Indicator\n                                var dropIndicator = getDropIndicator();\n\n                                if (dropTarget) {\n                                    var position = dropIndicator != null ? dropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, dropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                reactUtils.forEach(_dropTargets, function(target) {\n                                    signalDragEnd(target);\n                                });\n\n                                reactUtils.forEach(_dropIndicators, function(indicator) {\n                                    signalDragEnd(indicator);\n                                });\n\n                            } else {\n                                _dragNode = _dragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_dragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            reactUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap && signalDragOver(target)) {\n                                        foundTarget = target;\n                                        return true;\n                                    } else {\n                                        signalDragEnd(target);\n                                    }\n                                }\n                            }, true);\n\n                            var foundIndicator;\n\n                            if (foundTarget) {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    if (!foundIndicator) {\n                                        var elementOwnIndicator = indicator.component.props.axetype === _dragElement.props.axetype &&\n                                            indicator.component.props.position === _dragElement.props.position;\n\n                                        var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        if (targetIndicator && !elementOwnIndicator) {\n                                            var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                            var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                            if (isOverlap && signalDragOver(indicator)) {\n                                                foundIndicator = indicator;\n                                                return;\n                                            }\n                                        }\n                                    }\n\n                                    signalDragEnd(indicator);\n                                });\n\n                                if (!foundIndicator) {\n                                    var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                        return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                    });\n                                    if (axeIndicators.length > 0) {\n                                        signalDragOver(axeIndicators[axeIndicators.length - 1]);\n                                    }\n                                }\n                            } else {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    signalDragEnd(indicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true,\n                        width: component.getDOMNode().style.width\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false,\n                        width: null\n                    });\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    // initial state, all zero.\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false\n                    });\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button\n                            ];\n                        } else {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button,\n                                React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                })\n                            ];\n                        }\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '')\n                        },\n                        buttons\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.getDOMNode().childNodes[0].rows[0].cells[2].childNodes[0];\n                    var filterButtonPos = reactUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = 'orb-' + this.props.pivotTableComp.pgrid.config.theme + ' orb fltr-cntnr';\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thispos = reactUtils.getOffset(this.getDOMNode());\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: {\n                            x: thispos.x - e.pageX,\n                            y: thispos.y - e.pageY,\n                        },\n                        startpos: {\n                            x: e.pageX,\n                            y: e.pageY\n                        }\n                    });\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        dragManager.dragElement(null);\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        dragManager.dragElement(this);\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseUp: function() {\n                    var wasdragging = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    // if button was not dragged, proceed as a click\n                    if (!wasdragging) {\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n\n                    return true;\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = reactUtils.getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : ''\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortIndicator = self.props.field.sort.order === 'asc' ?\n                        ' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            ' \\u2193' :\n                            '');\n\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: 'fld-btn' + (this.props.pivotTableComp.pgrid.config.theme === 'bootstrap' ? ' btn btn-default' : ''),\n                            onMouseDown: this.onMouseDown,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0\n                                        }\n                                    }, self.props.field.caption),\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0,\n                                            width: 13\n                                        }\n                                    }, sortIndicator),\n                                    React.createElement(\"td\", {\n                                            style: {\n                                                padding: 0,\n                                                verticalAlign: 'top'\n                                            }\n                                        },\n                                        React.createElement(\"div\", {\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.getDOMNode().rows[1].cells[0].children[0];\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    new FilterManager(this, this.getDOMNode(), this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var checkboxes = [];\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = 'orb-btn' + (this.props.pivotTableComp.pgrid.config.bootstrap ? ' btn btn-default btn-xs' : '');\n                    var pivotStyle = window.getComputedStyle(this.props.pivotTableComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(\"div\", {\n                                            className: \"orb-select\"\n                                        },\n                                        React.createElement(\"div\", null, filtering.Operators.MATCH.name),\n                                        React.createElement(\"ul\", null,\n                                            React.createElement(\"li\", null, filtering.Operators.MATCH.name),\n                                            React.createElement(\"li\", null, filtering.Operators.NOTMATCH.name),\n                                            React.createElement(\"li\", null, filtering.Operators.EQ.name),\n                                            React.createElement(\"li\", null, filtering.Operators.NEQ.name),\n                                            React.createElement(\"li\", null, filtering.Operators.GT.name),\n                                            React.createElement(\"li\", null, filtering.Operators.GTE.name),\n                                            React.createElement(\"li\", null, filtering.Operators.LT.name),\n                                            React.createElement(\"li\", null, filtering.Operators.LTE.name)\n                                        )\n                                    )\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                    className: \"srchbox-col\"\n                                }, React.createElement(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"search\"\n                                }))\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, filterContainerElement, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var dropdownManager;\n                var resizeManager;\n\n                this.init = function() {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    dropdownManager = new DropdownManager(elems.operatorBox, function(newOperator) {\n                        if (operator.name !== newOperator) {\n                            operator = filtering.Operators.get(newOperator);\n                            self.toggleRegexpButtonVisibility();\n                            self.searchChanged('operatorChanged');\n                        }\n                    });\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            dropdownManager.select(operator.name, false);\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                function DropdownManager(dropdowElement, valueChangedCallback) {\n                    var self = this;\n                    var valueElement = dropdowElement.children[0];\n                    var listElement = dropdowElement.children[1];\n                    valueElement.addEventListener('click', function(e) {\n                        if (listElement.style.display !== 'block') {\n                            listElement.style.display = 'block';\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    });\n                    listElement.addEventListener('click', function(e) {\n                        if (e.target.parentNode == listElement) {\n                            self.select(e.target.textContent);\n                        }\n                    });\n                    document.addEventListener('click', function(e) {\n                        listElement.style.display = 'none';\n                    });\n\n                    this.select = function(value, notify) {\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (notify !== false) {\n                                valueChangedCallback(value);\n                            }\n                        }\n                    }\n                }\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className = elems.enableRegexButton.className.replace(/\\s+srchtyp\\-col\\-hidden/, '');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className += ' srchtyp-col-hidden';\n                    }\n                }\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        elems.enableRegexButton.className += ' srchtyp-col-active';\n                    }\n                }\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                }\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        if (checkedCount == 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            var excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n\n                this.init();\n            }\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClass = this.props.theme == 'bootstrap' ? \"table table-striped table-condensed\" : \"orb-table\";\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", {\n                                key: 'h' + h\n                            }, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", {\n                            key: 'h'\n                        }, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            for (var j = 0; j < data[i].length; j++) {\n                                row.push(React.createElement(\"td\", {\n                                    key: i + '' + j\n                                }, data[i][j]));\n                            }\n                            rows.push(React.createElement(\"tr\", {\n                                key: i\n                            }, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClass\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        }\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') +\n                        ' orb-' + this.props.theme +\n                        (this.props.theme === 'bootstrap' ? ' modal' : '');\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var useBootstrap = this.props.theme === 'bootstrap';\n                        var dialogClass = \"orb-dialog\" + (useBootstrap ? \" modal-dialog\" : \"\");\n                        var contentClass = useBootstrap ? \"modal-content\" : \"\";\n                        var headerClass = \"orb-dialog-header\" + (useBootstrap ? \" modal-header\" : \"\");\n                        var titleClass = useBootstrap ? \"modal-title\" : \"\";\n                        var bodyClass = \"orb-dialog-body\" + (useBootstrap ? \" modal-body\" : \"\");\n\n                        return React.createElement(\"div\", {\n                                className: dialogClass,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\"div\", {\n                                    className: contentClass\n                                },\n                                React.createElement(\"div\", {\n                                    className: headerClass\n                                }, React.createElement(\"div\", {\n                                    className: \"button-close\",\n                                    onClick: this.close\n                                }), React.createElement(\"div\", {\n                                    className: titleClass\n                                }, this.props.title)),\n                                React.createElement(\"div\", {\n                                        className: bodyClass\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.filtering\": 6,\n            \"../orb.ui.header\": 11,\n            \"../orb.utils\": 14,\n            \"./orb.react.utils\": 16,\n            \"react\": undefined\n        }],\n        16: [function(_dereq_, module, exports) {\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list != null) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            }\n\n            module.exports.getOffset = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left + 0,\n                        y: rect.top + 0\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            module.exports.getSize = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}