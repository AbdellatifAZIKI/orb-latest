{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFuncName","aggregateFunc","formatFunc","Field","caption","customfunc","visible","collapsible","collapsed","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","axe","rowSettings","columnSettings","dataSettings","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","aggregation","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","isString","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","dataHeadersLocation","grandTotal","width","height","showToolbar","theme","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","map","rows","columns","data","dataFieldsCount","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","splice","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","parent","value","isRoot","isLeaf","getRowIndexes","result","j",6,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",7,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",8,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",9,"states","set","key","state",10,"isBootstrap","currentTheme","themes","red","blue","green","orange","flower","gray","white","black","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","header","title","body",11,"uiheaders","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","currparent","infos","prevpar","grandpar","prevgrandpar","_multidatafields","leafIndex","datafieldindex","_datafieldscount","dataHeader","getUiInfo","HeaderType","SUB_TOTAL","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.header",12,"CellBase","template","expanded","cssclass","hspan","vspan","isvisible","getState","setState","newState","EMPTY","DATA_HEADER","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","subSpan","tspan","addone","subheaders","subheader","isRowsAxe","expand","collapse","dataCell","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",13,"uirows","uicols","OrbReactComps","buildUi","createVisibleFunc","rowvisible","colvisible","rowsHeaders","columnsLeafHeaders","layout","rowHeaders","columnHeaders","pivotTable","arr","dataRows","rowHeadersRow","rowLeafHeader","colHeaderIndex","columnLeafHeader","renderElement","pivotComponent","Dialog","create","setProps","oldAxeType","newAxeType","changeTheme","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","drilldown","index","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",14,"rowsAxe","addDataHeaders","lastInfosArray","infosMaxIndex","valIndex","subTotalHeader","newHeader","lastrow","grandtotalHeader",15,"ns","identifier","parts","split","prop","Object","prototype","apply","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify",16,"getAllColumnsWidth","tbl","onlyLastRow","w","startRow","colIndex","cells","brect","getBoundingClientRect","cw","right","left","setAllColumnsWidth","clearAllColumnsWidth","getClassname","compProps","cell","classname","isHidden","isEmpty","leftmostheader","leftmostdatavalue","leftmost","topmost","rightmost","FilterManager","reactComp","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","document","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","outerContainerSize","valuesTableSize","outerContainerWidth","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","filterContainerElement","children","onOperatorChanged","newOperator","regexpActiveChanged","className","removeEventListener","target","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","createElement","appendChild","react","reactUtils","comps","pivotId","themeChangeCallbacks","createClass","getInitialState","DragManager","registerThemeChanged","updateClasses","moveButton","expandRow","collapseRow","compCallback","unregisterThemeChanged","thisnode","componentDidUpdate","optimizeColumnsWidth","componentDidMount","dataCellsContainer","refs","colHeadersTable","rowHeadersTable","marginLeft","scrollLeft","marginTop","scrollTop","pivotContainerTable","dataCellsTable","maxWidth","dataCellsTableWidth","colHeadersTableWidth","tableWidth","pivotSize","getSize","rowHeadersSize","maxContainerWidth","dataCellsTableSize","upperbuttonsRowSize","upperbuttonsRow","columnbuttonsRowSize","columnbuttonsRow","colHeadersTableSize","maxContainerHeight","Toolbar","PivotTableUpperButtons","PivotTableColumnButtons","PivotTableRowButtons","PivotTableRowHeaders","PivotTableColumnHeaders","PivotTableDataCells","tblStyle","ref","pivotTableComp","colSpan","overflow","PivotRow","PivotCell","lastCellIndex","cell0","rowstyle","rowButtonsCell","rowButtonsCount","isrightmost","isleftmostHeader","isleftmost","isleftmostDataValue","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","onDoubleClick","rowSpan","dragManager","doElementsOverlap","elem1Rect","elem2Rect","signalDragOver","onDragOver","_dragElement","signalDragEnd","onDragEnd","getDropTarget","_dropTargets","component","isover","getDropIndicator","_dropIndicators","indicator","_pivotComp","_dragNode","_initialized","pivotComp","dragElement","elem","prevDragElement","dropTarget","dropIndicator","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","componentWillUnmount","isFirst","isLast","dtid","DropTarget","buttons","pbid","PivotButton","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","childNodes","filterButtonPos","getOffset","filterPanelFactory","FilterPanel","filterPanel","onMouseMove","onMouseUp","onMouseDown","thispos","mouseoffset","wasdragging","size","newpos","divstyle","sortIndicator","filterClass","fieldAggFunc","padding","verticalAlign","fieldButtons","dataButtons","columnButtons","rowButtons","headerRow","dataCells","dataRow","filterManager","unmountComponentAtNode","removeChild","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","addCheckboxRow","text","defaultChecked","Dropdown","buttonClass","currentFilter","selectedValue","onValueChanged","placeholder","float","openOrClose","valueNode","valueElement","valuesListNode","valuesList","onMouseEnter","backgroundPosition","onMouseLeave","selectValue","listNode","isli","textContent","dangerouslySetInnerHTML","__html","tableClasses","h","statics","dialogFactory","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","onThemeChanged","themeColors","color","../orb.axe","../orb.filtering","../orb.themes","../orb.ui.header","../orb.utils","./orb.react.utils",17,"list","defStop","ret","rect"],"mappings":"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","file":"orb.min.js","sourcesContent":["/**\n * orb v1.0.8, Pivot grid javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.8\n * @link http://nnajm.github.io/orb/\n * @license MIT\n */\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n\n        }, {\n            \"./orb.pgrid\": 7,\n            \"./orb.query\": 8,\n            \"./orb.ui.pgridwidget\": 13,\n            \"./orb.utils\": 15\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 15\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var configs = [];\n                var sorts = [];\n                var subtotals = [];\n                var functions = [];\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    configs.push(nnconfig);\n                    sorts.push(nnconfig.sort || {});\n                    subtotals.push(nnconfig.subTotal || {});\n                    functions.push({\n                        aggregateFuncName: nnconfig.aggregateFuncName,\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return new Field({\n                    name: getpropertyvalue('name', configs, ''),\n\n                    caption: getpropertyvalue('caption', configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', sorts, null),\n                        customfunc: getpropertyvalue('customfunc', sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', subtotals, false)\n                    },\n\n                    aggregateFuncName: getpropertyvalue('aggregateFuncName', functions, 'sum'),\n                    aggregateFunc: getpropertyvalue('aggregateFunc', functions, null),\n                    formatFunc: getpropertyvalue('formatFunc', functions, null)\n                }, false);\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                }\n\n                return mergefieldconfigs(fieldconfig, axeconfig, defaultfieldconfig, rootconfig);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFuncName = options.aggregateFuncName || (options.aggregateFunc && utils.isString(options.aggregateFunc) ? options.aggregateFunc : null);\n                this.aggregateFunc(options.aggregateFunc || 'sum');\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.showToolbar = config.showToolbar || false;\n                this.theme = themeManager;\n\n                themeManager.current(config.theme);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var field = getfield(self.allFields, fieldname);\n\n                    if (field) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            field = createfield(self, newaxetype, null, field);\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 6,\n            \"./orb.themes\": 10,\n            \"./orb.utils\": 15\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false\n                    } else {\n                        return true;\n                    }\n                }\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                }\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Matches',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 15\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                    }\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                }\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                }\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            return self.calcAggregation(rowdim.getRowIndexes().slice(0), coldim.getRowIndexes().slice(0), [datafieldName], aggregateFunc)[datafieldName] || null;\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                return self.dataMatrix[rowdim.id][coldim.id][datafieldName] || null;\n                            }\n                        }\n\n                        return null;\n                    }\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                }\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc()\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 6,\n            \"./orb.query\": 8,\n            \"./orb.utils\": 15\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                }\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 15\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        10: [function(_dereq_, module, exports) {\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#268BD2',\n                    green: '#3A9D23',\n                    orange: '#f7840d',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    white: '#FFFFFF',\n                    black: '#000000'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : '')\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-striped table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n\n                this.axe = columnsAxe;\n\n\n                this.headers = null;\n\n                this.leafsHeaders = null;\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'columns' ? self.axe.pgrid.config.dataFieldsCount : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'columns' && _datafieldscount > 1;\n\n                    self.headers = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                            self.headers.push([]);\n                            getUiInfo(depth, self.headers);\n                        }\n\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            // add grandtotal header\n                            (self.headers[0] = self.headers[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount));\n                        }\n\n                        if (self.headers.length === 0) {\n                            self.headers.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount)]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.headers.length > 0) {\n                        // last headers row\n                        var infos = self.headers[self.headers.length - 1];\n                        var header = infos[0];\n\n                        var currparent,\n                            prevpar = header.parent;\n\n                        for (var i = 0; i < infos.length; i++) {\n                            header = infos[i];\n                            currparent = header.parent;\n                            // if current header parent is different than previous header parent,\n                            // add previous parent\n                            if (currparent != prevpar) {\n                                pushsubtotal(prevpar);\n                                if (currparent != null) {\n                                    // walk up parent hierarchy and add grand parents if different \n                                    // than current header grand parents\n                                    var grandpar = currparent.parent;\n                                    var prevgrandpar = prevpar ? prevpar.parent : null;\n                                    while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                        pushsubtotal(prevgrandpar);\n                                        grandpar = grandpar ? grandpar.parent : null;\n                                        prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                    }\n                                }\n                                // update previous parent variable\n                                prevpar = currparent;\n                            }\n                            // push current header\n                            leafsHeaders.push(infos[i]);\n\n                            // if it's the last header, add all of its parents up to the top\n                            if (i === infos.length - 1) {\n                                while (prevpar != null) {\n                                    pushsubtotal(prevpar);\n                                    prevpar = prevpar.parent;\n                                }\n                            }\n                        }\n                        // grandtotal is visible for columns and if there is more than one dimension in this axe\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                            // push also grand total header\n                            leafsHeaders.push(self.headers[0][self.headers[0].length - 1]);\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (_multidatafields) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.headers.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, headers) {\n\n                    var infos = headers[headers.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        headers[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, _datafieldscount, subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 12\n        }],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'));\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = 'cell';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = 'Total ' + dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan() {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            for (var i = 0; i < self.subheaders.length; i++) {\n                                var subheader = self.subheaders[i];\n                                // if its not an array\n                                if (!subheader.dim.isLeaf) {\n                                    subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                    tspan += subSpan;\n                                    if (i === 0 && (subSpan === 0 || (isRowsAxe && subheader.type === HeaderType.SUB_TOTAL && !subheader.expanded))) {\n                                        addone = true;\n                                    }\n                                } else {\n                                    tspan += datafieldscount;\n                                }\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 9\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                var pivotComponent;\n                var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.dataRows = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null,\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.setProps({});\n                }\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    self.pgrid.moveField(field, oldAxeType, newAxeType, position);\n                    buildUi();\n                };\n\n                this.changeTheme = function(newTheme) {\n                    pivotComponent.changeTheme(newTheme);\n                }\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build row and column headers\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsHeaders = self.rows.headers;\n                    var columnsLeafHeaders = self.columns.leafsHeaders;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsHeaders.length\n                        },\n                        columnHeaders: {\n                            width: self.columns.leafsHeaders.length,\n                            height: (self.pgrid.columns.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var dataRows = [];\n                    var arr;\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n\n                    for (var ri = 0; ri < rowsHeaders.length; ri++) {\n                        var rowHeadersRow = rowsHeaders[ri];\n                        var rowLeafHeader = rowHeadersRow[rowHeadersRow.length - 1];\n\n                        arr = [];\n                        for (var colHeaderIndex = 0; colHeaderIndex < columnsLeafHeaders.length; colHeaderIndex++) {\n                            var columnLeafHeader = columnsLeafHeaders[colHeaderIndex];\n                            var isvisible = createVisibleFunc(rowLeafHeader.visible, columnLeafHeader.visible);\n                            arr[colHeaderIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rowLeafHeader, columnLeafHeader);\n                        }\n                        dataRows.push(arr);\n                    }\n                    self.dataRows = dataRows;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 7,\n            \"./orb.ui.cols\": 11,\n            \"./orb.ui.header\": 12,\n            \"./orb.ui.rows\": 14,\n            \"./react/orb.react.compiled\": 16\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n\n                this.axe = rowsAxe;\n\n\n                this.headers = [];\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'rows' ? (self.axe.pgrid.config.dataFieldsCount || 1) : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'rows' && _datafieldscount > 1;\n\n                    var headers = [\n                        []\n                    ];\n                    if (self.axe != null) {\n                        // Fill Rows layout infos\n                        getUiInfo(headers, self.axe.root);\n\n                        if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            var lastrow = headers[headers.length - 1];\n                            var grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount);\n                            if (lastrow.length === 0) {\n                                lastrow.push(grandtotalHeader);\n                            } else {\n                                headers.push([grandtotalHeader]);\n                            }\n\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(headers, grandtotalHeader);\n                        }\n\n                        if (headers[0].length === 0) {\n                            headers[0].push(new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount));\n                        }\n\n                    }\n                    self.headers = headers;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (_multidatafields) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < _datafieldscount - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, _datafieldscount, subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 12\n        }],\n        15: [function(_dereq_, module, exports) {\n\n            module.exports = {\n\n                ns: function(identifier, parent) {\n                    var parts = identifier.split('.');\n                    var i = 0;\n                    parent = parent || window;\n                    while (i < parts.length) {\n                        parent[parts[i]] = parent[parts[i]] || {};\n                        parent = parent[parts[i]];\n                        i++;\n                    }\n                    return parent;\n                },\n\n                ownProperties: function(obj) {\n                    var arr = [];\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            arr.push(prop);\n                        }\n                    }\n                    return arr;\n                },\n\n                isArray: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Array]';\n                },\n\n                isNumber: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Number]';\n                },\n\n                isDate: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Date]';\n                },\n\n                isString: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object String]';\n                },\n\n                isRegExp: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                },\n\n                escapeRegex: function(re) {\n                    return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                },\n\n                findInArray: function(array, predicate) {\n                    if (this.isArray(array) && predicate) {\n                        for (var i = 0; i < array.length; i++) {\n                            var item = array[i];\n                            if (predicate(item)) {\n                                return item;\n                            }\n                        }\n                    }\n                    return undefined;\n                },\n\n                jsonStringify: function(obj, censorKeywords) {\n                    function censor(key, value) {\n                        return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                    }\n                    return JSON.stringify(obj, censor, 2);\n                }\n            };\n\n        }, {}],\n        16: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var reactUtils = _dereq_('./orb.react.utils');\n\n            var extraCol = 0;\n            var comps = module.exports;\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            function getAllColumnsWidth(tbl, onlyLastRow) {\n                var w = [];\n                var startRow = onlyLastRow ? tbl.rows.length - 1 : 0;\n\n                for (var rowIndex = startRow; rowIndex < tbl.rows.length; rowIndex++) {\n                    var row = tbl.rows[rowIndex];\n                    for (var colIndex = 0; colIndex < row.cells.length; colIndex++) {\n                        var brect = row.cells[colIndex].getBoundingClientRect();\n                        var cw = brect.right - brect.left;\n                        if (w.length - 1 < colIndex) {\n                            w.push(cw);\n                        } else if (cw > w[colIndex]) {\n                            w[colIndex] = cw;\n                        }\n                    }\n                }\n\n                return w;\n            }\n\n            function setAllColumnsWidth(tbl, w, onlyLastRow) {\n                var startRow = onlyLastRow ? tbl.rows.length - 1 : 0;\n\n                for (var rowIndex = startRow; rowIndex < tbl.rows.length; rowIndex++) {\n                    var row = tbl.rows[rowIndex];\n                    for (var colIndex = 0; colIndex < row.cells.length; colIndex++) {\n                        row.cells[colIndex].style.width = w[colIndex] + 'px';\n                    }\n                }\n            }\n\n            function clearAllColumnsWidth(tbl) {\n                for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                    var row = tbl.rows[rowIndex];\n                    for (var colIndex = 0; colIndex < row.cells.length; colIndex++) {\n                        row.cells[colIndex].style.width = '';\n                    }\n                }\n            }\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function(button, newAxeType, position) {\n                    this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position);\n                    this.setProps({});\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                applyFilter: function(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback)) >= 0) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function() {\n                    var thisnode = this.getDOMNode();\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[1].className = classes.table;\n                },\n                componentDidUpdate: function() {\n                    this.optimizeColumnsWidth();\n                },\n                componentDidMount: function() {\n                    this.optimizeColumnsWidth();\n\n                    var dataCellsContainer = this.refs.dataCellsContainer.getDOMNode();\n                    var colHeadersTable = this.refs.colHeadersTable.getDOMNode();\n                    var rowHeadersTable = this.refs.rowHeadersTable.getDOMNode();\n\n                    dataCellsContainer.addEventListener('scroll', function() {\n                        colHeadersTable.style.marginLeft = -dataCellsContainer.scrollLeft + 'px';\n                        rowHeadersTable.style.marginTop = -dataCellsContainer.scrollTop + 'px';\n                    });\n                },\n                optimizeColumnsWidth: function() {\n                    var pivotContainerTable = this.refs.pivotContainerTable.getDOMNode();\n                    var dataCellsContainer = this.refs.dataCellsContainer.getDOMNode();\n                    var dataCellsTable = this.refs.dataCellsTable.getDOMNode();\n                    var colHeadersTable = this.refs.colHeadersTable.getDOMNode();\n                    var rowHeadersTable = this.refs.rowHeadersTable.getDOMNode();\n\n                    clearAllColumnsWidth(dataCellsTable, maxWidth);\n                    clearAllColumnsWidth(colHeadersTable, maxWidth);\n                    dataCellsTable.style.width = '';\n                    colHeadersTable.style.width = '';\n                    dataCellsContainer.style.width = '';\n\n                    var dataCellsTableWidth = getAllColumnsWidth(dataCellsTable);\n                    var colHeadersTableWidth = getAllColumnsWidth(colHeadersTable, true);\n                    var maxWidth = [];\n                    var tableWidth = 0;\n                    for (var i = 0; i < dataCellsTableWidth.length; i++) {\n                        if (dataCellsTableWidth[i] < colHeadersTableWidth[i]) {\n                            maxWidth.push(colHeadersTableWidth[i]);\n                            tableWidth += colHeadersTableWidth[i];\n                        } else {\n                            maxWidth.push(dataCellsTableWidth[i]);\n                            tableWidth += dataCellsTableWidth[i];\n                        }\n                    }\n\n                    setAllColumnsWidth(dataCellsTable, maxWidth);\n                    setAllColumnsWidth(colHeadersTable, maxWidth, true);\n\n                    dataCellsTable.style.width = tableWidth + 'px';\n                    colHeadersTable.style.width = tableWidth + 'px';\n\n                    var pivotSize = reactUtils.getSize(pivotContainerTable);\n                    var rowHeadersSize = reactUtils.getSize(rowHeadersTable);\n\n                    var maxContainerWidth = pivotSize.width - rowHeadersSize.width;\n                    if (maxContainerWidth > tableWidth) {\n                        dataCellsContainer.style.width = (tableWidth + 13) + 'px';\n                    } else {\n                        dataCellsContainer.style.width = maxContainerWidth + 'px';\n                    }\n\n                    var dataCellsTableSize = reactUtils.getSize(dataCellsTable);\n                    var upperbuttonsRowSize = reactUtils.getSize(this.refs.upperbuttonsRow.getDOMNode());\n                    var columnbuttonsRowSize = reactUtils.getSize(this.refs.columnbuttonsRow.getDOMNode());\n                    var colHeadersTableSize = reactUtils.getSize(colHeadersTable);\n                    var maxContainerHeight = pivotSize.height - upperbuttonsRowSize.height - columnbuttonsRowSize.height - colHeadersTableSize.height;\n                    if (maxContainerHeight > dataCellsTableSize.height) {\n                        dataCellsContainer.style.height = (dataCellsTableSize.height + 13) + 'px';\n                    } else {\n                        dataCellsContainer.style.height = maxContainerHeight + 'px';\n                    }\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var Toolbar = comps.Toolbar;\n                    var PivotTableUpperButtons = comps.PivotTableUpperButtons;\n                    var PivotTableColumnButtons = comps.PivotTableColumnButtons;\n                    var PivotTableRowButtons = comps.PivotTableRowButtons;\n                    var PivotTableRowHeaders = comps.PivotTableRowHeaders;\n                    var PivotTableColumnHeaders = comps.PivotTableColumnHeaders;\n                    var PivotTableDataCells = comps.PivotTableDataCells;\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: classes.container,\n                                style: tblStyle,\n                                ref: \"pivotContainerTable\"\n                            },\n                            React.createElement(\"div\", {\n                                    className: \"orb-toolbar\",\n                                    style: {\n                                        display: config.showToolbar ? 'block' : 'none'\n                                    }\n                                },\n                                React.createElement(Toolbar, {\n                                    pivotTableComp: self\n                                })\n                            ),\n                            React.createElement(\"table\", {\n                                    id: 'tbl-' + self.id,\n                                    className: classes.table,\n                                    style: {\n                                        width: '100%'\n                                    }\n                                },\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", {\n                                            ref: \"upperbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", {\n                                                colSpan: \"2\"\n                                            },\n                                            React.createElement(PivotTableUpperButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", {\n                                            ref: \"columnbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", null),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(PivotTableColumnButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", null,\n                                            React.createElement(PivotTableRowButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                                style: {\n                                                    overflow: 'hidden'\n                                                }\n                                            },\n                                            React.createElement(PivotTableColumnHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"colHeadersTable\"\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"cell-topmost\",\n                                                style: {\n                                                    overflow: 'hidden'\n                                                }\n                                            },\n                                            React.createElement(PivotTableRowHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"rowHeadersTable\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(\"div\", {\n                                                    className: \"datacells-container\",\n                                                    ref: \"dataCellsContainer\"\n                                                },\n                                                React.createElement(PivotTableDataCells, {\n                                                    pivotTableComp: self,\n                                                    ref: \"dataCellsTable\"\n                                                })\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var cells;\n\n                    var rowstyle = {};\n\n                    if (this.props.rowButtonsCell !== undefined) {\n                        cells = this.props.row.slice(this.props.rowButtonsCount).map(function(cell, index) {\n                            var isrightmost = index === (lastCellIndex - self.props.rowButtonsCount);\n                            var isleftmostHeader = index === 0;\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                rightmost: isrightmost,\n                                leftmostheader: isleftmostHeader,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", null,\n                                this.props.rowButtonsCell,\n                                cells\n                            )\n                        );\n\n                    } else {\n\n                        if (cell0.template == 'cell-template-row-header' && cell0.visible && !cell0.visible()) {\n                            rowstyle.display = 'none';\n                        }\n\n                        cells = this.props.row.map(function(cell, index) {\n                            var isrightmost = index === lastCellIndex;\n                            var isleftmost = index === 0 && (\n                                cell.type === uiheaders.HeaderType.EMPTY ||\n                                (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.dim.parent.isRoot) ||\n                                (cell.type === uiheaders.HeaderType.GRAND_TOTAL) ||\n                                (cell.dim && (cell.dim.isRoot || cell.dim.parent.isRoot))\n                            );\n                            var isleftmostHeader = cell.template === 'cell-template-column-header' && index === 1;\n                            var isleftmostDataValue = cell.template === 'cell-template-datavalue' && ((index === 0 && cell.visible()) || (index > 0 && !self.props.row[index - 1].visible()));\n\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                leftmostheader: isleftmostHeader,\n                                leftmostdatavalue: isleftmostDataValue,\n                                rightmost: isrightmost,\n                                leftmost: isleftmost,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", {\n                                    style: rowstyle\n                                },\n                                cells\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var cellClick;\n                    var headerPushed = false;\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible && cell.subtotalHeader.expanded;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"orb-tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'orb-tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", null, cell.value)))\n                                    )));\n                            }\n                            value = cell.value;\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            className: cell.template !== 'cell-template-datavalue' ? 'hdr-val' : ''\n                        }, React.createElement(\"div\", null, value)));\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: getClassname(this.props),\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan(),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            function getClassname(compProps) {\n                var cell = compProps.cell;\n                var classname = cell.cssclass;\n                var isHidden = !cell.visible();\n                var isEmpty = cell.template === 'cell-template-empty';\n\n                if (isHidden) {\n                    classname += ' cell-hidden';\n                }\n\n                if (compProps.leftmostheader || compProps.leftmostdatavalue || (compProps.leftmost && !isEmpty)) {\n                    classname += ' cell-leftmost';\n                }\n\n                if (compProps.topmost && cell.axetype !== axe.Type.ROWS && !isEmpty) {\n                    classname += ' cell-topmost';\n                }\n\n                if (compProps.rightmost && cell.axetype !== axe.Type.ROWS && (cell.axetype !== axe.Type.COLUMNS || cell.type === uiheaders.HeaderType.GRAND_TOTAL)) {\n                    classname += ' cell-rightmost';\n                }\n\n                if (cell.template === 'cell-template-column-header' || cell.template === 'cell-template-dataheader') {\n                    classname += ' cntr';\n                }\n\n                return classname;\n            }\n\n\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n                var _dragElement = null;\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function signalDragOver(target) {\n                    if (target.onDragOver) {\n                        target.onDragOver(_dragElement);\n                        return true;\n                    }\n                    return false;\n                }\n\n                function signalDragEnd(target) {\n                    if (target.onDragEnd) {\n                        target.onDragEnd();\n                        return true;\n                    }\n                    return false;\n                }\n\n                function getDropTarget() {\n                    return reactUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return reactUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    dragElement: function(elem) {\n\n                        var prevDragElement = _dragElement;\n                        _dragElement = elem;\n                        if (_dragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                // Drop Target\n                                var dropTarget = getDropTarget();\n                                // Drop Indicator\n                                var dropIndicator = getDropIndicator();\n\n                                if (dropTarget) {\n                                    var position = dropIndicator != null ? dropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, dropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                reactUtils.forEach(_dropTargets, function(target) {\n                                    signalDragEnd(target);\n                                });\n\n                                reactUtils.forEach(_dropIndicators, function(indicator) {\n                                    signalDragEnd(indicator);\n                                });\n\n                            } else {\n                                _dragNode = _dragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_dragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            reactUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap && signalDragOver(target)) {\n                                        foundTarget = target;\n                                        return true;\n                                    } else {\n                                        signalDragEnd(target);\n                                    }\n                                }\n                            }, true);\n\n                            var foundIndicator;\n\n                            if (foundTarget) {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    if (!foundIndicator) {\n                                        var elementOwnIndicator = indicator.component.props.axetype === _dragElement.props.axetype &&\n                                            indicator.component.props.position === _dragElement.props.position;\n\n                                        var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        if (targetIndicator && !elementOwnIndicator) {\n                                            var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                            var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                            if (isOverlap && signalDragOver(indicator)) {\n                                                foundIndicator = indicator;\n                                                return;\n                                            }\n                                        }\n                                    }\n\n                                    signalDragEnd(indicator);\n                                });\n\n                                if (!foundIndicator) {\n                                    var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                        return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                    });\n                                    if (axeIndicators.length > 0) {\n                                        signalDragOver(axeIndicators[axeIndicators.length - 1]);\n                                    }\n                                }\n                            } else {\n                                reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                    signalDragEnd(indicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true,\n                        width: component.getDOMNode().style.width\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false,\n                        width: null\n                    });\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    // initial state, all zero.\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false\n                    });\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button\n                            ];\n                        } else {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button,\n                                React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                })\n                            ];\n                        }\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '')\n                        },\n                        buttons\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.getDOMNode().childNodes[0].rows[0].cells[2].childNodes[0];\n                    var filterButtonPos = reactUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = this.props.pivotTableComp.pgrid.config.theme.getFilterClasses().container;\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        dragManager.dragElement(null);\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        dragManager.dragElement(this);\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentDidMount: function() {\n                    this.props.pivotTableComp.registerThemeChanged(this.updateClasses);\n                },\n                componentWillUnmount: function() {\n                    this.props.pivotTableComp.unregisterThemeChanged(this.updateClasses);\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thispos = reactUtils.getOffset(this.getDOMNode());\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: {\n                            x: thispos.x - e.pageX,\n                            y: thispos.y - e.pageY,\n                        },\n                        startpos: {\n                            x: e.pageX,\n                            y: e.pageY\n                        }\n                    });\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function() {\n                    var wasdragging = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    // if button was not dragged, proceed as a click\n                    if (!wasdragging) {\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n\n                    return true;\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = reactUtils.getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                updateClasses: function() {\n                    this.getDOMNode().className = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton;\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : ''\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortIndicator = self.props.field.sort.order === 'asc' ?\n                        ' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            ' \\u2193' :\n                            '');\n\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n                    var fieldAggFunc = '';\n                    if (self.props.axetype === axe.Type.DATA) {\n                        fieldAggFunc = React.createElement(\"small\", null, ' (' + self.props.field.aggregateFuncName + ')');\n                    }\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton,\n                            onMouseDown: this.onMouseDown,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0\n                                        }\n                                    }, self.props.field.caption, fieldAggFunc),\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0,\n                                            width: 13\n                                        }\n                                    }, sortIndicator),\n                                    React.createElement(\"td\", {\n                                            style: {\n                                                padding: 0,\n                                                verticalAlign: 'top'\n                                            }\n                                        },\n                                        React.createElement(\"div\", {\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableUpperButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var fieldButtons = config.availablefields().map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: null,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"flds-grp-cap av-flds text-muted\"\n                                    },\n                                    React.createElement(\"div\", null, \"Fields\")\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"av-flds\"\n                                    },\n                                    React.createElement(DropTarget, {\n                                        buttons: fieldButtons,\n                                        axetype: null\n                                    })\n                                )\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"flds-grp-cap text-muted\"\n                                    },\n                                    React.createElement(\"div\", null, \"Data\")\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"empty\"\n                                    },\n                                    React.createElement(DropTarget, {\n                                        buttons: dataButtons,\n                                        axetype: axe.Type.DATA\n                                    })\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableColumnButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: columnButtons,\n                        axetype: axe.Type.COLUMNS\n                    });\n                }\n            });\n\n            module.exports.PivotTableRowButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var rowButtons = config.rowFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.ROWS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: rowButtons,\n                        axetype: axe.Type.ROWS\n                    });\n                }\n            });\n\n            module.exports.PivotTableColumnHeaders = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n\n                    var columnHeaders = pgridwidget.columns.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            topmost: index === 0,\n                            row: headerRow,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            columnHeaders\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableRowHeaders = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n\n                    var rowHeaders = pgridwidget.rows.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            topmost: index === 0,\n                            row: headerRow,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            rowHeaders\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableDataCells = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n\n                    var dataCells = pgridwidget.dataRows.map(function(dataRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            topmost: index === 0,\n                            row: dataRow,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            dataCells\n                        )\n                    );\n                }\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                filterManager: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.props.pivotTableComp.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.getDOMNode().rows[1].cells[0].children[0];\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    this.filterManager.init(this.getDOMNode());\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var Dropdown = comps.Dropdown;\n                    var checkboxes = [];\n\n                    this.filterManager = new FilterManager(this, this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().orbButton;\n                    var pivotStyle = window.getComputedStyle(this.props.pivotTableComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    var currentFilter = this.pgridwidget.pgrid.getFieldFilter(this.props.field);\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(Dropdown, {\n                                        values: [\n                                            filtering.Operators.MATCH.name,\n                                            filtering.Operators.NOTMATCH.name,\n                                            filtering.Operators.EQ.name,\n                                            filtering.Operators.NEQ.name,\n                                            filtering.Operators.GT.name,\n                                            filtering.Operators.GTE.name,\n                                            filtering.Operators.LT.name,\n                                            filtering.Operators.LTE.name\n                                        ],\n                                        selectedValue: currentFilter && currentFilter.operator ? currentFilter.operator.name : filtering.Operators.MATCH.name,\n                                        onValueChanged: this.filterManager.onOperatorChanged\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                    className: \"srchbox-col\"\n                                }, React.createElement(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"search\"\n                                }))\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var resizeManager;\n\n                this.init = function(filterContainerElement) {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                this.onOperatorChanged = function(newOperator) {\n                    if (operator.name !== newOperator) {\n                        operator = filtering.Operators.get(newOperator);\n                        self.toggleRegexpButtonVisibility();\n                        self.searchChanged('operatorChanged');\n                    }\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className = elems.enableRegexButton.className.replace(/\\s+srchtyp\\-col\\-hidden/, '');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className += ' srchtyp-col-hidden';\n                    }\n                }\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        elems.enableRegexButton.className += ' srchtyp-col-active';\n                    }\n                }\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                }\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        if (checkedCount == 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            var excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n            }\n\n            module.exports.Dropdown = react.createClass({\n                openOrClose: function(e) {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    var valuesListNode = this.refs.valuesList.getDOMNode();\n                    if (e.target === valueNode && valuesListNode.style.display === 'none') {\n                        valuesListNode.style.display = 'block';\n                    } else {\n                        valuesListNode.style.display = 'none';\n                    }\n                },\n                onMouseEnter: function() {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    valueNode.className = \"orb-tgl-btn-down\";\n                    valueNode.style.backgroundPosition = 'right center';\n                },\n                onMouseLeave: function() {\n                    this.refs.valueElement.getDOMNode().className = \"\";\n                },\n                componentDidMount: function() {\n                    document.addEventListener('click', this.openOrClose);\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('click', this.openOrClose);\n                },\n                selectValue: function(e) {\n                    var listNode = this.refs.valuesList.getDOMNode();\n                    var target = e.target;\n                    var isli = false;\n                    while (!isli && target != null) {\n                        if (target.parentNode == listNode) {\n                            isli = true;\n                            break;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    if (isli) {\n                        var value = target.textContent;\n                        var valueElement = this.refs.valueElement.getDOMNode();\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (this.props.onValueChanged) {\n                                this.props.onValueChanged(value);\n                            }\n                        }\n                    }\n                },\n                render: function() {\n                    function createSelectValueFunc(value) {\n                        return function() {\n                            this.selectValue(value);\n                        };\n                    }\n\n                    var values = [];\n                    for (var i = 0; i < this.props.values.length; i++) {\n                        values.push(React.createElement(\"li\", {\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.values[i]\n                            }\n                        }))\n                    }\n\n                    return React.createElement(\"div\", {\n                            className: \"orb-select\"\n                        },\n                        React.createElement(\"div\", {\n                            ref: \"valueElement\",\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.selectedValue\n                            },\n                            onMouseEnter: this.onMouseEnter,\n                            onMouseLeave: this.onMouseLeave\n                        }),\n                        React.createElement(\"ul\", {\n                                ref: \"valuesList\",\n                                style: {\n                                    display: 'none'\n                                },\n                                onClick: this.selectValue\n                            },\n                            values\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClasses = this.props.theme.getGridClasses();\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", {\n                                key: 'h' + h\n                            }, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", {\n                            key: 'h'\n                        }, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            for (var j = 0; j < data[i].length; j++) {\n                                row.push(React.createElement(\"td\", {\n                                    key: i + '' + j\n                                }, data[i][j]));\n                            }\n                            rows.push(React.createElement(\"tr\", {\n                                key: i\n                            }, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClasses.table\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        }\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = this.props.theme.getDialogClasses(visible).overlay;\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var classes = this.props.theme.getDialogClasses();\n\n                        return React.createElement(\"div\", {\n                                className: classes.dialog,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\"div\", {\n                                    className: classes.content\n                                },\n                                React.createElement(\"div\", {\n                                    className: classes.header\n                                }, React.createElement(\"div\", {\n                                    className: \"button-close\",\n                                    onClick: this.close\n                                }), React.createElement(\"div\", {\n                                    className: classes.title\n                                }, this.props.title)),\n                                React.createElement(\"div\", {\n                                        className: classes.body\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.Toolbar = react.createClass({\n                onThemeChanged: function(newTheme) {\n                    this.props.pivotTableComp.changeTheme(newTheme);\n                },\n                render: function() {\n\n                    var Dropdown = comps.Dropdown;\n\n                    var themeColors = _dereq_('../orb.themes').themes;\n                    var values = [];\n                    for (var color in themeColors) {\n                        values.push('<div style=\"float: left; width: 16px; height: 16px; margin-right: 3px; border: 1px dashed lightgray; background-color: ' + themeColors[color] + '\"></div><div style=\"float: left;\">' + color + '</div>');\n                    }\n                    values.push('<div style=\"float: left; width: 16px; height: 16px; margin-right: 3px; border: 1px dashed lightgray;\"></div><div style=\"float: left;\">bootstrap</div>');\n\n                    var buttons = [\n                        React.createElement(\"div\", {\n                            className: \"orb-tlbr-btn\",\n                            style: {\n                                width: 101\n                            }\n                        }, React.createElement(Dropdown, {\n                            values: values,\n                            selectedValue: 'Theme',\n                            onValueChanged: this.onThemeChanged\n                        }))\n                    ];\n\n                    return React.createElement(\"div\", null,\n                        buttons\n                    );\n                }\n            });\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.filtering\": 6,\n            \"../orb.themes\": 10,\n            \"../orb.ui.header\": 12,\n            \"../orb.utils\": 15,\n            \"./orb.react.utils\": 17,\n            \"react\": undefined\n        }],\n        17: [function(_dereq_, module, exports) {\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list != null) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            }\n\n            module.exports.getOffset = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left + 0,\n                        y: rect.top + 0\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            module.exports.getSize = function(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}