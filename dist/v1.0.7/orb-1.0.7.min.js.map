{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","sorts","subtotals","filters","functions","arguments","nnconfig","subTotal","filter","aggregateFunc","formatFunc","Field","caption","regexp","operator","value","customfunc","visible","collapsible","collapsed","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","axe","rowSettings","columnSettings","dataSettings","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","FilterConfig","aggregation","filtering","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","dataHeadersLocation","grandTotal","theme","trim","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","allFields","map","rows","columns","data","dataFieldsCount","getField","getRowField","getColumnField","getDataField","availablefields","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","splice","./orb.aggregation","./orb.axe","./orb.filtering",5,"id","parent","isRoot","isLeaf","getRowIndexes","result","j",6,"ALL","NONE","BLANK","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",7,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",8,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",9,"states","set","key","state",10,"uiheaders","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","uiInfos","currparent","infos","header","prevpar","grandpar","prevgrandpar","_multidatafields","leafIndex","datafieldindex","_datafieldscount","dataHeader","getUiInfo","HeaderType","SUB_TOTAL","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.header",11,"CellBase","template","expanded","cssclass","hspan","vspan","isvisible","getState","setState","newState","EMPTY","DATA_HEADER","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","subSpan","tspan","addone","subheaders","subheader","isRowsAxe","expand","collapse","dataCell","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",12,"uirows","uicols","OrbReactComps","buildUi","setArrayLength","arr","createVisibleFunc","rowvisible","colvisible","rowsInfos","rowsInfoslength","columnsInfos","columnsInfoslength","columnsAllHeaders","columnsAllHeaderslength","rowHeadersWidth","columnHeadersWidth","rowHeadersHeight","columnHeadersHeight","totalWidth","totalHeight","cells","ci","uiinfo","prelength","ui","ruiinfo","Array","uri","rinfo","cinfosIndex","cinfo","renderElement","pivotComponent","forceUpdate","oldAxeType","newAxeType","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","dialog","Dialog","create","drilldown","title","index","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",13,"rowsAxe","addDataHeaders","lastInfosArray","infosMaxIndex","valIndex","subTotalHeader","newHeader","lastrow","grandtotalHeader",14,"ns","identifier","parts","split","prop","Object","prototype","apply","isString","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify",15,"createOverlay","overlayElement","document","createElement","className","body","appendChild","FilterManager","reactComp","filterContainerElement","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","dropdownManager","select","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","getBoundingClientRect","outerContainerSize","valuesTableSize","outerContainerWidth","right","left","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","width","height","DropdownManager","dropdowElement","valueChangedCallback","valueElement","children","listElement","target","textContent","notify","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","newOperator","regexpActiveChanged","removeEventListener","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","list","defStop","ret","getOffset","rect","getSize","react","pivotId","extraCol","comps","createClass","getInitialState","DragManager","setProps","moveButton","expandRow","cell","collapseRow","ptc","PivotButton","PivotRow","DropTarget","fieldButtons","rootComp","dataButtons","columnButtons","rowButtons","rowButtonsCell","colSpan","rowSpan","topmost","rowButtonsCount","useBootstrap","containerClass","orbtableClass","tblStyle","PivotCell","lastCellIndex","cell0","rowstyle","isrightmost","isleftmostHeader","rightmost","leftmostheader","isleftmost","isleftmostDataValue","leftmostdatavalue","leftmost","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","classname","isHidden","onDoubleClick","tableClass","headerRow","h","statics","dialogFactory","overlay","setOverlayClass","componentDidMount","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","clientHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","unmountComponentAtNode","dialogClass","contentClass","headerClass","titleClass","bodyClass","FilterPanel","container","removeChild","onMouseDown","onMouseWheel","valuesTable","scrollHeight","componentWillMount","componentWillUnmount","addCheckboxRow","text","defaultChecked","buttonClass","bootstrap","placeholder","float","dragManager","doElementsOverlap","elem1Rect","elem2Rect","signalDragOver","onDragOver","_dragElement","signalDragEnd","onDragEnd","getDropTarget","_dropTargets","component","isover","getDropIndicator","_dropIndicators","indicator","_pivotComp","_dragNode","_initialized","pivotComp","dragElement","elem","prevDragElement","dropTarget","dropIndicator","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","dtid","DropIndicator","buttons","isFirst","isLast","displayName","pbid","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","childNodes","filterButtonPos","filterPanelFactory","filterPanel","thispos","mouseoffset","componentDidUpdate","onMouseMove","onMouseUp","wasdragging","size","newpos","divstyle","sortIndicator","filterClass","padding","verticalAlign","../orb.axe","../orb.filtering","../orb.ui.header","../orb.utils"],"mappings":"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","file":"orb-1.0.7.min.js","sourcesContent":["/**\n * orb v1.0.7, Pivot grid javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.7\n * @link http://nnajm.github.io/orb/\n * @license MIT\n */\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n\n        }, {\n            \"./orb.pgrid\": 7,\n            \"./orb.query\": 8,\n            \"./orb.ui.pgridwidget\": 12,\n            \"./orb.utils\": 14\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 14\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var configs = [];\n                var sorts = [];\n                var subtotals = [];\n                var filters = [];\n                var functions = [];\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    configs.push(nnconfig);\n                    sorts.push(nnconfig.sort || {});\n                    subtotals.push(nnconfig.subTotal || {});\n                    filters.push(nnconfig.filter || {});\n                    functions.push({\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return new Field({\n                    name: getpropertyvalue('name', configs, ''),\n\n                    caption: getpropertyvalue('caption', configs, ''),\n                    filter: {\n                        type: getpropertyvalue('type', filters, 'operator'),\n                        regexp: getpropertyvalue('regexp', filters, null),\n                        operator: getpropertyvalue('operator', filters, null),\n                        value: getpropertyvalue('value', filters, null)\n                    },\n\n                    sort: {\n                        order: getpropertyvalue('order', sorts, null),\n                        customfunc: getpropertyvalue('customfunc', sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', subtotals, false)\n                    },\n\n                    aggregateFunc: getpropertyvalue('aggregateFunc', functions, null),\n                    formatFunc: getpropertyvalue('formatFunc', functions, null)\n                }, false);\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                }\n\n                return mergefieldconfigs(fieldconfig, axeconfig, defaultfieldconfig, rootconfig);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            function FilterConfig(options) {\n                options = options || {};\n\n                this.type = options.type;\n\n                this.operator = options.operator;\n                this.value = options.value;\n\n                this.values = options.values;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n                this.filter = new FilterConfig(options.filter);\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFunc(options.aggregateFunc || 'sum');\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.theme = (config.theme || 'blue').toString().trim();\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var field = getfield(self.allFields, fieldname);\n\n                    if (field) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            field = createfield(self, newaxetype, null, field);\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 6,\n            \"./orb.utils\": 14\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false\n                    } else {\n                        return true;\n                    }\n                }\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                }\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 14\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                    }\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                }\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                }\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            return self.calcAggregation(rowdim.getRowIndexes().slice(0), coldim.getRowIndexes().slice(0), [datafieldName], aggregateFunc)[datafieldName] || null;\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                return self.dataMatrix[rowdim.id][coldim.id][datafieldName] || null;\n                            }\n                        }\n\n                        return null;\n                    }\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                }\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc()\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 6,\n            \"./orb.query\": 8,\n            \"./orb.utils\": 14\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                }\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 14\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        10: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n\n                this.axe = columnsAxe;\n\n\n                this.uiInfos = null;\n\n                this.leafsHeaders = null;\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'columns' ? self.axe.pgrid.config.dataFieldsCount : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'columns' && _datafieldscount > 1;\n\n                    self.uiInfos = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                            self.uiInfos.push([]);\n                            getUiInfo(depth, self.uiInfos);\n                        }\n\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            // add grandtotal header\n                            (self.uiInfos[0] = self.uiInfos[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount));\n                        }\n\n                        if (self.uiInfos.length === 0) {\n                            self.uiInfos.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount)]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.uiInfos.length > 0) {\n                        // last headers row\n                        var infos = self.uiInfos[self.uiInfos.length - 1];\n                        var header = infos[0];\n\n                        var currparent,\n                            prevpar = header.parent;\n\n                        for (var i = 0; i < infos.length; i++) {\n                            header = infos[i];\n                            currparent = header.parent;\n                            // if current header parent is different than previous header parent,\n                            // add previous parent\n                            if (currparent != prevpar) {\n                                pushsubtotal(prevpar);\n                                if (currparent != null) {\n                                    // walk up parent hierarchy and add grand parents if different \n                                    // than current header grand parents\n                                    var grandpar = currparent.parent;\n                                    var prevgrandpar = prevpar ? prevpar.parent : null;\n                                    while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                        pushsubtotal(prevgrandpar);\n                                        grandpar = grandpar ? grandpar.parent : null;\n                                        prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                    }\n                                }\n                                // update previous parent variable\n                                prevpar = currparent;\n                            }\n                            // push current header\n                            leafsHeaders.push(infos[i]);\n\n                            // if it's the last header, add all of its parents up to the top\n                            if (i === infos.length - 1) {\n                                while (prevpar != null) {\n                                    pushsubtotal(prevpar);\n                                    prevpar = prevpar.parent;\n                                }\n                            }\n                        }\n                        // grandtotal is visible for columns and if there is more than one dimension in this axe\n                        if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                            // push also grand total header\n                            leafsHeaders.push(self.uiInfos[0][self.uiInfos[0].length - 1]);\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (_multidatafields) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.uiInfos.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, uiInfos) {\n\n                    var infos = uiInfos[uiInfos.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        uiInfos[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, _datafieldscount, subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 11\n        }],\n        11: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'));\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = 'cell';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = 'Total ' + dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan() {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            for (var i = 0; i < self.subheaders.length; i++) {\n                                var subheader = self.subheaders[i];\n                                // if its not an array\n                                if (!subheader.dim.isLeaf) {\n                                    subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                    tspan += subSpan;\n                                    if (i === 0 && (subSpan === 0 || (isRowsAxe && subheader.type === HeaderType.SUB_TOTAL && !subheader.expanded))) {\n                                        addone = true;\n                                    }\n                                } else {\n                                    tspan += datafieldscount;\n                                }\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 9\n        }],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.rowHeadersWidth = null;\n\n\n                this.columnHeadersWidth = null;\n\n\n                this.rowHeadersHeight = null;\n\n\n                this.columnHeadersHeight = null;\n\n\n                this.totalWidth = null;\n\n\n                this.totalWidth = null;\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.forceUpdate();\n                }\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                    pivotComponent.forceUpdate();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    self.pgrid.moveField(field, oldAxeType, newAxeType, position);\n                    buildUi();\n                };\n\n                this.filters = null;\n\n                this.cells = [];\n\n                var pivotComponent;\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            data: self,\n                            config: config\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                var dialog = OrbReactComps.Dialog.create();\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build rows and columns\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsInfos = self.rows.uiInfos;\n                    var rowsInfoslength = rowsInfos.length;\n\n                    var columnsInfos = self.columns.uiInfos;\n                    var columnsInfoslength = columnsInfos.length;\n\n                    var columnsAllHeaders = self.columns.leafsHeaders;\n                    var columnsAllHeaderslength = columnsAllHeaders.length;\n\n                    // set control properties\t\t\n                    self.rowHeadersWidth = (self.pgrid.rows.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0);\n                    self.columnHeadersWidth = columnsAllHeaderslength;\n                    self.rowHeadersHeight = rowsInfoslength;\n                    self.columnHeadersHeight = (self.pgrid.columns.fields.length || 1) + (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0);\n                    self.totalWidth = self.rowHeadersWidth + self.columnHeadersWidth;\n                    self.totalHeight = self.rowHeadersHeight + self.columnHeadersHeight;\n\n                    var cells = [];\n                    setArrayLength(cells, columnsInfoslength + rowsInfoslength);\n\n                    function setArrayLength(arr, length) {\n                        if (arr.length !== length) {\n                            arr.length = length;\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    var arr;\n\n                    for (var ci = 0; ci < columnsInfoslength; ci++) {\n\n                        var uiinfo = columnsInfos[ci];\n                        var prelength = 0;\n                        arr = (cells[ci] = cells[ci] || []);\n                        if (columnsInfoslength > 1 && ci === 0) {\n                            prelength = 1;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            arr[0] = new uiheaders.emptyCell(self.rowHeadersWidth, self.columnHeadersHeight - 1);\n                        } else if (ci === columnsInfoslength - 1) {\n                            prelength = self.rowHeadersWidth;\n                            setArrayLength(arr, prelength + uiinfo.length);\n                            if (self.pgrid.rows.fields.length > 0) {\n                                for (var findex = 0; findex < self.pgrid.config.rowFields.length; findex++) {\n                                    arr[findex] = new uiheaders.buttonCell(self.pgrid.config.rowFields[findex]);\n                                }\n                            } else {\n                                arr[0] = new uiheaders.emptyCell(self.rowHeadersWidth, 1);\n                            }\n                        }\n\n                        for (var ui = 0; ui < uiinfo.length; ui++) {\n                            arr[prelength + ui] = uiinfo[ui];\n                        }\n                    }\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n\n                    for (var ri = 0; ri < rowsInfoslength; ri++) {\n                        var ruiinfo = rowsInfos[ri];\n\n                        arr = (cells[columnsInfoslength + ri] = cells[columnsInfoslength + ri] || new Array(ruiinfo.length + columnsAllHeaderslength));\n                        setArrayLength(arr, ruiinfo.length + columnsAllHeaderslength);\n\n                        for (var uri = 0; uri < ruiinfo.length; uri++) {\n                            arr[uri] = ruiinfo[uri];\n                        }\n\n                        var rinfo = ruiinfo[ruiinfo.length - 1];\n                        for (var cinfosIndex = 0; cinfosIndex < columnsAllHeaderslength; cinfosIndex++) {\n                            var cinfo = columnsAllHeaders[cinfosIndex];\n                            var isvisible = createVisibleFunc(rinfo.visible, cinfo.visible);\n                            arr[ruiinfo.length + cinfosIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rinfo, cinfo);\n                        }\n                    }\n                    self.cells = cells;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 7,\n            \"./orb.ui.cols\": 10,\n            \"./orb.ui.header\": 11,\n            \"./orb.ui.rows\": 13,\n            \"./react/orb.react.compiled\": 15\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n\n                this.axe = rowsAxe;\n\n\n                this.uiInfos = [];\n\n                var _multidatafields;\n                var _datafieldscount;\n\n                this.build = function() {\n\n                    _datafieldscount = self.axe.pgrid.config.dataHeadersLocation === 'rows' ? (self.axe.pgrid.config.dataFieldsCount || 1) : 1;\n                    _multidatafields = self.axe.pgrid.config.dataHeadersLocation === 'rows' && _datafieldscount > 1;\n\n                    var uiInfos = [\n                        []\n                    ];\n                    if (self.axe != null) {\n                        // Fill Rows layout infos\n                        getUiInfo(uiInfos, self.axe.root);\n\n                        if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            var lastrow = uiInfos[uiInfos.length - 1];\n                            var grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, _datafieldscount);\n                            if (lastrow.length === 0) {\n                                lastrow.push(grandtotalHeader);\n                            } else {\n                                uiInfos.push([grandtotalHeader]);\n                            }\n\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(uiInfos, grandtotalHeader);\n                        }\n\n                        if (uiInfos[0].length === 0) {\n                            uiInfos[0].push(new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, _datafieldscount));\n                        }\n\n                    }\n                    self.uiInfos = uiInfos;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (_multidatafields) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < _datafieldscount; datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < _datafieldscount - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, _datafieldscount);\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, _datafieldscount, subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 11\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            module.exports = {\n\n                ns: function(identifier, parent) {\n                    var parts = identifier.split('.');\n                    var i = 0;\n                    parent = parent || window;\n                    while (i < parts.length) {\n                        parent[parts[i]] = parent[parts[i]] || {};\n                        parent = parent[parts[i]];\n                        i++;\n                    }\n                    return parent;\n                },\n\n                ownProperties: function(obj) {\n                    var arr = [];\n                    for (var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            arr.push(prop);\n                        }\n                    }\n                    return arr;\n                },\n\n                isArray: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Array]';\n                },\n\n                isNumber: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Number]';\n                },\n\n                isDate: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object Date]';\n                },\n\n                isString: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object String]';\n                },\n\n                isRegExp: function(obj) {\n                    return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                },\n\n                escapeRegex: function(re) {\n                    return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                },\n\n                findInArray: function(array, predicate) {\n                    if (this.isArray(array) && predicate) {\n                        for (var i = 0; i < array.length; i++) {\n                            var item = array[i];\n                            if (predicate(item)) {\n                                return item;\n                            }\n                        }\n                    }\n                    return undefined;\n                },\n\n                jsonStringify: function(obj, censorKeywords) {\n                    function censor(key, value) {\n                        return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                    }\n                    return JSON.stringify(obj, censor, 2);\n                }\n            };\n\n        }, {}],\n        15: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n\n            var pivotId = 1;\n            var extraCol = 1;\n            var comps = module.exports;\n\n            module.exports.PivotTable = react.createClass({\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n                    return {};\n                },\n                id: pivotId++,\n                sort: function(axetype, field) {\n                    this.props.data.sort(axetype, field);\n                    this.setProps(this.props);\n                },\n                moveButton: function(button, newAxeType, position) {\n                    this.props.data.moveField(button.props.field.name, button.props.axetype, newAxeType, position);\n                    this.setProps(this.props);\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var ptc = this.props.data;\n                    var PivotButton = comps.PivotButton;\n                    var PivotRow = comps.PivotRow;\n                    var DropTarget = comps.DropTarget;\n\n                    var fieldButtons = ptc.pgrid.config.availablefields().map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: null,\n                            position: index,\n                            rootComp: self\n                        });\n                    });\n\n                    var dataButtons = ptc.pgrid.config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            rootComp: self\n                        });\n                    });\n\n                    var columnButtons = ptc.pgrid.config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            rootComp: self\n                        });\n                    });\n\n                    // get 'row buttons' row (also last row containing column headers)\n                    var rowButtons = utils.findInArray(ptc.cells, function(row) {\n                        return row[0].template === 'cell-template-fieldbutton';\n                    });\n\n                    // build row buttons\n                    if (rowButtons !== undefined) {\n                        rowButtons = rowButtons.filter(function(buttonCell) {\n                            return buttonCell.template === 'cell-template-fieldbutton';\n                        }).map(function(buttonCell, index) {\n                            return React.createElement(PivotButton, {\n                                key: buttonCell.value.name,\n                                field: buttonCell.value,\n                                axetype: axe.Type.ROWS,\n                                position: index,\n                                rootComp: self\n                            });\n                        });\n                    } else {\n                        rowButtons = [];\n                    }\n\n                    // build the cell that will contains 'row buttons'\n                    var rowButtonsCell = React.createElement(\"td\", {\n                            className: \"empty\",\n                            colSpan: ptc.rowHeadersWidth + extraCol,\n                            rowSpan: \"1\"\n                        },\n                        React.createElement(DropTarget, {\n                            data: rowButtons,\n                            axetype: axe.Type.ROWS\n                        })\n                    );\n\n                    var rows = ptc.cells.map(function(row, index) {\n                        if (index == ptc.columnHeadersHeight - 1) {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                row: row,\n                                topmost: index === 0,\n                                rowButtonsCount: ptc.rowHeadersWidth,\n                                rowButtonsCell: rowButtonsCell,\n                                rootComp: self\n                            });\n                        } else {\n                            return React.createElement(PivotRow, {\n                                key: index,\n                                topmost: index === 0,\n                                row: row,\n                                rootComp: self\n                            });\n                        }\n                    });\n\n                    var useBootstrap = ptc.pgrid.config.theme === 'bootstrap';\n                    var containerClass = \"orb-container orb-\" + ptc.pgrid.config.theme;\n                    var orbtableClass = \"orb\" + (useBootstrap ? \" table\" : \"\");\n\n                    var tblStyle = {};\n                    if (this.props.config.width) {\n                        tblStyle.width = this.props.config.width;\n                    }\n                    if (this.props.config.height) {\n                        tblStyle.height = this.props.config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: containerClass,\n                                style: tblStyle\n                            },\n                            React.createElement(\"table\", {\n                                    id: \"{'tbl' + self.id}\",\n                                    className: orbtableClass,\n                                    style: {\n                                        width: '100%'\n                                    }\n                                },\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap av-flds text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Fields\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"av-flds\",\n                                                colSpan: ptc.totalWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                data: fieldButtons,\n                                                axetype: null\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"flds-grp-cap text-muted\",\n                                                colSpan: extraCol,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(\"div\", null, \"Data\")\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: ptc.totalWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                data: dataButtons,\n                                                axetype: axe.Type.DATA\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                            className: \"empty\",\n                                            colSpan: ptc.rowHeadersWidth + extraCol,\n                                            rowSpan: \"1\"\n                                        }),\n                                        React.createElement(\"td\", {\n                                                className: \"empty\",\n                                                colSpan: ptc.columnHeadersWidth,\n                                                rowSpan: \"1\"\n                                            },\n                                            React.createElement(DropTarget, {\n                                                data: columnButtons,\n                                                axetype: axe.Type.COLUMNS\n                                            })\n                                        )\n                                    ),\n                                    rows\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var cells;\n\n                    var rowstyle = {};\n\n                    if (this.props.rowButtonsCell !== undefined) {\n                        cells = this.props.row.slice(this.props.rowButtonsCount).map(function(cell, index) {\n                            var isrightmost = index === (lastCellIndex - self.props.rowButtonsCount);\n                            var isleftmostHeader = index === 0;\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                rightmost: isrightmost,\n                                leftmostheader: isleftmostHeader,\n                                rootComp: self.props.rootComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", null,\n                                this.props.rowButtonsCell,\n                                cells\n                            )\n                        );\n\n                    } else {\n\n                        if (cell0.template == 'cell-template-row-header' && cell0.visible && !cell0.visible()) {\n                            rowstyle.display = 'none';\n                        }\n\n                        cells = this.props.row.map(function(cell, index) {\n                            var isrightmost = index === lastCellIndex;\n                            var isleftmost = index === 0 && (\n                                cell.type === uiheaders.HeaderType.EMPTY ||\n                                (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.dim.parent.isRoot) ||\n                                (cell.type === uiheaders.HeaderType.GRAND_TOTAL) ||\n                                (cell.dim && (cell.dim.isRoot || cell.dim.parent.isRoot))\n                            );\n                            var isleftmostHeader = cell.template === 'cell-template-column-header' && index === 1;\n                            var isleftmostDataValue = cell.template === 'cell-template-datavalue' && cell.visible() && (self.props.row[index - 1].template !== 'cell-template-datavalue' || !self.props.row[index - 1].visible());\n\n                            return React.createElement(PivotCell, {\n                                key: index,\n                                cell: cell,\n                                topmost: self.props.topmost,\n                                leftmostheader: isleftmostHeader,\n                                leftmostdatavalue: isleftmostDataValue,\n                                rightmost: isrightmost,\n                                leftmost: isleftmost,\n                                rootComp: self.props.rootComp\n                            });\n                        });\n\n                        return (\n                            React.createElement(\"tr\", {\n                                    style: rowstyle\n                                },\n                                cells\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.rootComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.rootComp.collapseRow(this.props.cell);\n                },\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var vArrow = '\\u25bc';\n                    var hArrow = '\\u25b6';\n                    var cellClick;\n                    var headerPushed = false;\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible && cell.subtotalHeader.expanded;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", null, cell.value)))\n                                    )));\n                            }\n                            value = cell.value;\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.rootComp.props.data.drilldown(cell, self.props.rootComp.id);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            className: cell.template !== 'cell-template-datavalue' ? 'hdr-val' : ''\n                        }, React.createElement(\"div\", null, value)));\n                    }\n\n                    var classname = cell.cssclass;\n                    var isHidden = !cell.visible();\n\n                    if (isHidden) {\n                        classname += ' cell-hidden';\n                    }\n\n                    if (this.props.topmost && cell.template !== 'cell-template-empty') {\n                        classname += ' cell-topmost';\n                    }\n\n                    if (this.props.rightmost && (cell.axetype !== axe.Type.COLUMNS || cell.type === uiheaders.HeaderType.GRAND_TOTAL)) {\n                        classname += ' cell-rightmost';\n                    }\n\n                    if ((this.props.leftmost && cell.template !== 'cell-template-empty') || this.props.leftmostheader || this.props.leftmostdatavalue) {\n                        classname += ' cell-leftmost';\n                    }\n\n                    if (cell.template === 'cell-template-column-header' || cell.template === 'cell-template-dataheader') {\n                        classname += ' cntr';\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: classname,\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan() + (this.props.leftmost ? extraCol : 0),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClass = this.props.theme == 'bootstrap' ? \"table table-striped table-condensed\" : \"orb-table\";\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", null, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", null, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            for (var j = 0; j < data[i].length; j++) {\n                                row.push(React.createElement(\"td\", null, data[i][j]));\n                            }\n                            rows.push(React.createElement(\"tr\", null, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClass\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var dialog = dialogFactory({});\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                dialog.props = props;\n                                React.render(dialog, overlay);\n                            }\n                        }\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') +\n                        ' orb-' + this.props.theme +\n                        (this.props.theme === 'bootstrap' ? ' modal' : '');\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                    var useBootstrap = this.props.theme === 'bootstrap';\n                    var dialogClass = \"orb-dialog\" + (useBootstrap ? \" modal-dialog\" : \"\");\n                    var contentClass = useBootstrap ? \"modal-content\" : \"\";\n                    var headerClass = \"orb-dialog-header\" + (useBootstrap ? \" modal-header\" : \"\");\n                    var titleClass = useBootstrap ? \"modal-title\" : \"\";\n                    var bodyClass = \"orb-dialog-body\" + (useBootstrap ? \" modal-body\" : \"\");\n\n                    return React.createElement(\"div\", {\n                            className: dialogClass,\n                            style: this.props.style || {}\n                        },\n                        React.createElement(\"div\", {\n                                className: contentClass\n                            },\n                            React.createElement(\"div\", {\n                                className: headerClass\n                            }, React.createElement(\"div\", {\n                                className: \"button-close\",\n                                onClick: this.close\n                            }), React.createElement(\"div\", {\n                                className: titleClass\n                            }, this.props.title)),\n                            React.createElement(\"div\", {\n                                    className: bodyClass\n                                },\n                                comp\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.rootComp.props.data;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.getDOMNode().rows[1].cells[0].children[0];\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    new FilterManager(this, this.getDOMNode(), this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var checkboxes = [];\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = 'orb-btn' + (this.props.rootComp.props.data.pgrid.config.bootstrap ? ' btn btn-default btn-xs' : '');\n                    var pivotStyle = window.getComputedStyle(this.props.rootComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(\"div\", {\n                                            className: \"orb-select\"\n                                        },\n                                        React.createElement(\"div\", null, filtering.Operators.MATCH.name),\n                                        React.createElement(\"ul\", null,\n                                            React.createElement(\"li\", null, filtering.Operators.MATCH.name),\n                                            React.createElement(\"li\", null, filtering.Operators.NOTMATCH.name),\n                                            React.createElement(\"li\", null, filtering.Operators.EQ.name),\n                                            React.createElement(\"li\", null, filtering.Operators.NEQ.name),\n                                            React.createElement(\"li\", null, filtering.Operators.GT.name),\n                                            React.createElement(\"li\", null, filtering.Operators.GTE.name),\n                                            React.createElement(\"li\", null, filtering.Operators.LT.name),\n                                            React.createElement(\"li\", null, filtering.Operators.LTE.name)\n                                        )\n                                    )\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                    className: \"srchbox-col\"\n                                }, React.createElement(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"search\"\n                                }))\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, filterContainerElement, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var dropdownManager;\n                var resizeManager;\n\n                this.init = function() {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    dropdownManager = new DropdownManager(elems.operatorBox, function(newOperator) {\n                        if (operator.name !== newOperator) {\n                            operator = filtering.Operators.get(newOperator);\n                            self.toggleRegexpButtonVisibility();\n                            self.searchChanged('operatorChanged');\n                        }\n                    });\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            dropdownManager.select(operator.name, false);\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                function DropdownManager(dropdowElement, valueChangedCallback) {\n                    var self = this;\n                    var valueElement = dropdowElement.children[0];\n                    var listElement = dropdowElement.children[1];\n                    valueElement.addEventListener('click', function(e) {\n                        if (listElement.style.display !== 'block') {\n                            listElement.style.display = 'block';\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    });\n                    listElement.addEventListener('click', function(e) {\n                        if (e.target.parentNode == listElement) {\n                            self.select(e.target.textContent);\n                        }\n                    });\n                    document.addEventListener('click', function(e) {\n                        listElement.style.display = 'none';\n                    });\n\n                    this.select = function(value, notify) {\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (notify !== false) {\n                                valueChangedCallback(value);\n                            }\n                        }\n                    }\n                }\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className = elems.enableRegexButton.className.replace(/\\s+srchtyp\\-col\\-hidden/, '');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        elems.enableRegexButton.className += ' srchtyp-col-hidden';\n                    }\n                }\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        elems.enableRegexButton.className += ' srchtyp-col-active';\n                    }\n                }\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                }\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        if (checkedCount == 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            var excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n\n                this.init();\n            }\n\n            function forEach(list, func, defStop) {\n                var ret;\n                if (list != null) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            }\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n                var _dragElement = null;\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function signalDragOver(target) {\n                    if (target.onDragOver) {\n                        target.onDragOver(_dragElement);\n                        return true;\n                    }\n                    return false;\n                }\n\n                function signalDragEnd(target) {\n                    if (target.onDragEnd) {\n                        target.onDragEnd();\n                        return true;\n                    }\n                    return false;\n                }\n\n                function getDropTarget() {\n                    return forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    dragElement: function(elem) {\n\n                        var prevDragElement = _dragElement;\n                        _dragElement = elem;\n                        if (_dragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                // Drop Target\n                                var dropTarget = getDropTarget();\n                                // Drop Indicator\n                                var dropIndicator = getDropIndicator();\n\n                                if (dropTarget) {\n                                    var position = dropIndicator != null ? dropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, dropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                forEach(_dropTargets, function(target) {\n                                    signalDragEnd(target);\n                                });\n\n                                forEach(_dropIndicators, function(indicator) {\n                                    signalDragEnd(indicator);\n                                });\n\n                            } else {\n                                _dragNode = _dragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_dragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap && signalDragOver(target)) {\n                                        foundTarget = target;\n                                        return true;\n                                    } else {\n                                        signalDragEnd(target);\n                                    }\n                                }\n                            }, true);\n\n                            var foundIndicator;\n\n                            if (foundTarget) {\n                                forEach(_dropIndicators, function(indicator, index) {\n                                    if (!foundIndicator) {\n                                        var elementOwnIndicator = indicator.component.props.axetype === _dragElement.props.axetype &&\n                                            indicator.component.props.position === _dragElement.props.position;\n\n                                        var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        if (targetIndicator && !elementOwnIndicator) {\n                                            var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                            var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                            if (isOverlap && signalDragOver(indicator)) {\n                                                foundIndicator = indicator;\n                                                return;\n                                            }\n                                        }\n                                    }\n\n                                    signalDragEnd(indicator);\n                                });\n\n                                if (!foundIndicator) {\n                                    var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                        return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                    });\n                                    if (axeIndicators.length > 0) {\n                                        signalDragOver(axeIndicators[axeIndicators.length - 1]);\n                                    }\n                                }\n                            } else {\n                                forEach(_dropIndicators, function(indicator, index) {\n                                    signalDragEnd(indicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    // initial state, all zero.\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false\n                    });\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n                    var buttons = this.props.data.map(function(button, index) {\n                        if (index < self.props.data.length - 1) {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button\n                            ];\n                        } else {\n                            return [\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                }),\n                                button,\n                                React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                })\n                            ];\n                        }\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '')\n                        },\n                        buttons\n                    );\n                }\n            });\n\n            function getOffset(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left + 0,\n                        y: rect.top + 0\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            function getSize(element) {\n                if (element != null) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(component) {\n                    this.setState({\n                        isover: true,\n                        width: component.getDOMNode().style.width\n                    });\n                },\n                onDragEnd: function() {\n                    this.setState({\n                        isover: false,\n                        width: null\n                    });\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.getDOMNode().childNodes[0].rows[0].cells[2].childNodes[0];\n                    var filterButtonPos = getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        rootComp: this.props.rootComp\n                    });\n\n                    filterContainer.className = 'orb-' + this.props.rootComp.props.data.pgrid.config.theme + ' orb fltr-cntnr';\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thispos = getOffset(this.getDOMNode());\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: {\n                            x: thispos.x - e.pageX,\n                            y: thispos.y - e.pageY,\n                        },\n                        startpos: {\n                            x: e.pageX,\n                            y: e.pageY\n                        }\n                    });\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        dragManager.dragElement(null);\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        dragManager.dragElement(this);\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseUp: function() {\n                    var wasdragging = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    // if button was not dragged, proceed as a click\n                    if (!wasdragging) {\n                        this.props.rootComp.sort(this.props.axetype, this.props.field);\n                    }\n\n                    return true;\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : ''\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortIndicator = self.props.field.sort.order === 'asc' ?\n                        ' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            ' \\u2193' :\n                            '');\n\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.rootComp.props.data.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: 'fld-btn' + (this.props.rootComp.props.config.theme === 'bootstrap' ? ' btn btn-default' : ''),\n                            onMouseDown: this.onMouseDown,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0\n                                        }\n                                    }, self.props.field.caption),\n                                    React.createElement(\"td\", {\n                                        style: {\n                                            padding: 0,\n                                            width: 13\n                                        }\n                                    }, sortIndicator),\n                                    React.createElement(\"td\", {\n                                            style: {\n                                                padding: 0,\n                                                verticalAlign: 'top'\n                                            }\n                                        },\n                                        React.createElement(\"div\", {\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.filtering\": 6,\n            \"../orb.ui.header\": 11,\n            \"../orb.utils\": 14,\n            \"react\": undefined\n        }]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}